{
	"info": {
		"_postman_id": "2dc2bfab-5949-4468-82de-8c4c7bbc140c",
		"name": "Finicity APIs",
		"description": "OpenAPI specification for Finicity APIs\n\n![](https://raw.githubusercontent.com/Mastercard/finicity-openapi/main/res/logo.png)\n\nContact Support:\n Name: Finicity\n Email: business.development@finicity.com",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Accounts",
			"item": [
				{
					"name": "Get Customer Accounts by Institution Login ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/customers/{{customerId}}/institutionLogins/{{institutionLoginId}}/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"customers",
								"{{customerId}}",
								"institutionLogins",
								"{{institutionLoginId}}",
								"accounts"
							]
						},
						"description": "Get all accounts associated with the given institution login. All accounts returned are accessible by a single set of credentials on a single institution.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The account list was successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/institutionLogins/:institutionLoginId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"institutionLogins",
										":institutionLoginId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "institutionLoginId",
											"value": "1007302745",
											"description": "(Required) The institution login ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/institutionLogins/:institutionLoginId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"institutionLogins",
										":institutionLoginId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "institutionLoginId",
											"value": "1007302745",
											"description": "(Required) The institution login ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/institutionLogins/:institutionLoginId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"institutionLogins",
										":institutionLoginId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "institutionLoginId",
											"value": "1007302745",
											"description": "(Required) The institution login ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/institutionLogins/:institutionLoginId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"institutionLogins",
										":institutionLoginId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "institutionLoginId",
											"value": "1007302745",
											"description": "(Required) The institution login ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Refresh Customer Accounts by Institution Login ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/customers/{{customerId}}/institutionLogins/{{institutionLoginId}}/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"customers",
								"{{customerId}}",
								"institutionLogins",
								"{{institutionLoginId}}",
								"accounts"
							]
						},
						"description": "Refresh account and transaction data for all accounts associated with a given `institutionLoginId` with a connection to the institution.\n\nClient apps are not permitted to automate calls to the Refresh services. Active accounts are automatically refreshed by Finicity once per day. Because many financial institutions only post transactions once per day, calling Refresh repeatedly is usually a waste of resources and is not recommended.\n\nApps may call Refresh services for a specific customer when there is a specific business case for the need of data that is up to date as of the moment. Please discuss with your account manager and systems engineer for further clarification.\n\nThe recommended timeout setting for this request is 120 seconds in order to receive a response. However, you can terminate the connection after making the call the operation will still complete. You will have to pull the account records to check for an updated aggregation attempt date to know when the refresh is complete.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The account list was successfully refreshed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/institutionLogins/:institutionLoginId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"institutionLogins",
										":institutionLoginId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "institutionLoginId",
											"value": "1007302745",
											"description": "(Required) The institution login ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/institutionLogins/:institutionLoginId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"institutionLogins",
										":institutionLoginId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "institutionLoginId",
											"value": "1007302745",
											"description": "(Required) The institution login ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/institutionLogins/:institutionLoginId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"institutionLogins",
										":institutionLoginId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "institutionLoginId",
											"value": "1007302745",
											"description": "(Required) The institution login ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/institutionLogins/:institutionLoginId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"institutionLogins",
										":institutionLoginId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "institutionLoginId",
											"value": "1007302745",
											"description": "(Required) The institution login ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Delete Customer Accounts by Institution Login ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(404)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/customers/{{customerId}}/institutionLogins/:institutionLoginId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"customers",
								"{{customerId}}",
								"institutionLogins",
								":institutionLoginId"
							],
							"variable": [
								{
									"key": "institutionLoginId",
									"value": "1234",
									"description": "(Required) The institution login ID"
								}
							]
						},
						"description": "Remove from Finicity aggregation the set of accounts matching the institution login ID.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The customer accounts were successfully deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/institutionLogins/:institutionLoginId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"institutionLogins",
										":institutionLoginId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "institutionLoginId",
											"value": "1007302745",
											"description": "(Required) The institution login ID"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/institutionLogins/:institutionLoginId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"institutionLogins",
										":institutionLoginId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "institutionLoginId",
											"value": "1007302745",
											"description": "(Required) The institution login ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/institutionLogins/:institutionLoginId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"institutionLogins",
										":institutionLoginId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "institutionLoginId",
											"value": "1007302745",
											"description": "(Required) The institution login ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/institutionLogins/:institutionLoginId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"institutionLogins",
										":institutionLoginId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "institutionLoginId",
											"value": "1007302745",
											"description": "(Required) The institution login ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Get Customer Account by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aggregation/v2/customers/{{customerId}}/accounts/{{accountId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v2",
								"customers",
								"{{customerId}}",
								"accounts",
								"{{accountId}}"
							]
						},
						"description": "Get a customer account by ID.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The account was successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Delete Customer Account by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(404)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/customers/{{customerId}}/accounts/:accountId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"customers",
								"{{customerId}}",
								"accounts",
								":accountId"
							],
							"variable": [
								{
									"key": "accountId",
									"value": "1234",
									"description": "(Required) The account ID"
								}
							]
						},
						"description": "Remove the given account from Finicity aggregation.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The customer account was successfully deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Get Customer Accounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/customers/{{customerId}}/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"customers",
								"{{customerId}}",
								"accounts"
							],
							"query": [
								{
									"key": "status",
									"value": "pending",
									"description": "A filter to fetch account in the given status",
									"disabled": true
								}
							]
						},
						"description": "Get all accounts owned by the given customer.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The account list was successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts?status=pending",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts"
									],
									"query": [
										{
											"key": "status",
											"value": "pending"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts?status=pending",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts"
									],
									"query": [
										{
											"key": "status",
											"value": "pending"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts?status=pending",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts"
									],
									"query": [
										{
											"key": "status",
											"value": "pending"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts?status=pending",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts"
									],
									"query": [
										{
											"key": "status",
											"value": "pending"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Refresh Customer Accounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/customers/{{customerId}}/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"customers",
								"{{customerId}}",
								"accounts"
							]
						},
						"description": "Refresh account and transaction data for all accounts associated with the  given `customerId` with a connection to the institution.\n\nClient apps are not permitted to automate calls to the Refresh services. Active accounts are automatically refreshed by Finicity once per day. Because many financial institutions only post transactions once per day, calling Refresh repeatedly is usually a waste of resources and is not recommended.\n\nApps may call Refresh services for a specific customer when there is a specific business case for the need of data that is up to date as of the moment. Please discuss with your account manager and systems engineer for further clarification.\n\nThe recommended timeout setting for this request is 120 seconds in order to receive a response. However, you can terminate the connection after making the call the operation will still complete. You will have to pull the account records to check for an updated aggregation attempt date to know when the refresh is complete.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The account list was successfully refreshed",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Get Customer Accounts by Institution ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/customers/{{customerId}}/institutions/{{institutionId}}/accounts",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"customers",
								"{{customerId}}",
								"institutions",
								"{{institutionId}}",
								"accounts"
							]
						},
						"description": "Get all active accounts owned by the given customer at the given institution.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The account list was successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/institutions/:institutionId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"institutions",
										":institutionId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "institutionId",
											"value": "4222",
											"description": "(Required) The institution ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/institutions/:institutionId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"institutions",
										":institutionId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "institutionId",
											"value": "4222",
											"description": "(Required) The institution ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/institutions/:institutionId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"institutions",
										":institutionId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "institutionId",
											"value": "4222",
											"description": "(Required) The institution ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/institutions/:institutionId/accounts",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"institutions",
										":institutionId",
										"accounts"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "institutionId",
											"value": "4222",
											"description": "(Required) The institution ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				}
			],
			"description": "Fetch or refresh customer accounts",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const baseUrl = pm.collectionVariables.get(\"baseUrl\")",
							"const appKey = pm.environment.get(\"appKey\")",
							"const customerId = pm.environment.get(\"customerId\")",
							"const appToken = pm.globals.get(\"appToken\")",
							"",
							"const institutionLoginId = pm.variables.get(\"institutionLoginId\")",
							"const institutionId = pm.variables.get(\"institutionId\")",
							"const accountId = pm.variables.get(\"accountId\")",
							"if (institutionLoginId && institutionId && accountId) {",
							"    return",
							"}",
							"",
							"",
							"console.log(\"Fetching account ID, institution ID and institution login ID ...\")",
							"const options = {",
							"    url:  baseUrl + \"/aggregation/v1/customers/\"+ customerId + \"/accounts\",",
							"    method: 'GET',",
							"    header: {",
							"        \"Accept\": \"application/json\",",
							"        \"Finicity-App-Key\": appKey,",
							"        \"Finicity-App-Token\": appToken",
							"    }",
							"}",
							"pm.sendRequest(options, function (err, response) {",
							"    pm.expect(err).to.be.null",
							"    pm.expect(response.code).to.equals(200)",
							"    const account = response.json().accounts[0]",
							"    pm.variables.set(\"institutionLoginId\", account.institutionLoginId)",
							"    pm.variables.set(\"institutionId\", account.institutionId)",
							"    pm.variables.set(\"accountId\", account.id)",
							"})"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Analytics and Attributes",
			"item": [
				{
					"name": "Generate Consumer Attributes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"accountIds\": [\r\n        \"5011648377\",\r\n        \"5011648377\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/analytics/ca360/v1/customers/{{customerId}}/analytics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"analytics",
								"ca360",
								"v1",
								"customers",
								"{{customerId}}",
								"analytics"
							]
						},
						"description": "Generate a Consumer Attributes report for the given customer. The \"to\" and \"from\" date range is the last 12 months of consumer data, based on the date at which the report was generated.\n\nAn analytic ID is created and associated with the customer's ID. If you generate multiple Consumer Attributes reports for the same customer, then each report will have its own analytic ID.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The Consumer Attributes report was successfully generated",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/analytics/ca360/v1/customers/:customerId/analytics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"analytics",
										"ca360",
										"v1",
										"customers",
										":customerId",
										"analytics"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/analytics/ca360/v1/customers/:customerId/analytics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"analytics",
										"ca360",
										"v1",
										"customers",
										":customerId",
										"analytics"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/analytics/ca360/v1/customers/:customerId/analytics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"analytics",
										"ca360",
										"v1",
										"customers",
										":customerId",
										"analytics"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/analytics/ca360/v1/customers/:customerId/analytics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"analytics",
										"ca360",
										"v1",
										"customers",
										":customerId",
										"analytics"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "List Consumer Attributes",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/analytics/ca360/v1/customers/{{customerId}}/analytics",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"analytics",
								"ca360",
								"v1",
								"customers",
								"{{customerId}}",
								"analytics"
							]
						},
						"description": "Retrieve a list of all analytic IDs previously created for a customer using the Generate Consumer Attributes API.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "Attributes IDs were successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/analytics/ca360/v1/customers/:customerId/analytics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"analytics",
										"ca360",
										"v1",
										"customers",
										":customerId",
										"analytics"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/analytics/ca360/v1/customers/:customerId/analytics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"analytics",
										"ca360",
										"v1",
										"customers",
										":customerId",
										"analytics"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/analytics/ca360/v1/customers/:customerId/analytics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"analytics",
										"ca360",
										"v1",
										"customers",
										":customerId",
										"analytics"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/analytics/ca360/v1/customers/:customerId/analytics",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"analytics",
										"ca360",
										"v1",
										"customers",
										":customerId",
										"analytics"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Generate FCRA Consumer Attributes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"accountIds\": [\n        \"5011648377\",\n        \"5011648377\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/analytics/ca360/v1/customers/{{customerId}}/analytics/fcra",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"analytics",
								"ca360",
								"v1",
								"customers",
								"{{customerId}}",
								"analytics",
								"fcra"
							]
						},
						"description": "_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The Consumer Attributes report was successfully generated",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/analytics/ca360/v1/customers/:customerId/analytics/fcra",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"analytics",
										"ca360",
										"v1",
										"customers",
										":customerId",
										"analytics",
										"fcra"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/analytics/ca360/v1/customers/:customerId/analytics/fcra",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"analytics",
										"ca360",
										"v1",
										"customers",
										":customerId",
										"analytics",
										"fcra"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/analytics/ca360/v1/customers/:customerId/analytics/fcra",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"analytics",
										"ca360",
										"v1",
										"customers",
										":customerId",
										"analytics",
										"fcra"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/analytics/ca360/v1/customers/:customerId/analytics/fcra",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"analytics",
										"ca360",
										"v1",
										"customers",
										":customerId",
										"analytics",
										"fcra"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Get Consumer Attributes by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/analytics/ca360/v1/customers/{{customerId}}/analytics/:analytics_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"analytics",
								"ca360",
								"v1",
								"customers",
								"{{customerId}}",
								"analytics",
								":analytics_id"
							],
							"variable": [
								{
									"key": "analytics_id",
									"value": "CA-5dfbaa3ac-5321",
									"description": "(Required) The analytic ID"
								}
							]
						},
						"description": "Retrieve a Consumer Attributes report for a customer.\n\nUse the analytic and customer IDs to retrieve 12 months of data attributes according to the \"to\" and \"from\" date range of the report at the time it was created.\n\nIf the current date is before the end of the calendar month, then the most recent month provides all available data up to the current date.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The Consumer Attributes report was successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/analytics/ca360/v1/customers/:customerId/analytics/:analytics_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"analytics",
										"ca360",
										"v1",
										"customers",
										":customerId",
										"analytics",
										":analytics_id"
									],
									"variable": [
										{
											"key": "analytics_id",
											"value": "CA-5dfbaa3ac-5321",
											"description": "(Required) The analytic ID"
										},
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/analytics/ca360/v1/customers/:customerId/analytics/:analytics_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"analytics",
										"ca360",
										"v1",
										"customers",
										":customerId",
										"analytics",
										":analytics_id"
									],
									"variable": [
										{
											"key": "analytics_id",
											"value": "CA-5dfbaa3ac-5321",
											"description": "(Required) The analytic ID"
										},
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/analytics/ca360/v1/customers/:customerId/analytics/:analytics_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"analytics",
										"ca360",
										"v1",
										"customers",
										":customerId",
										"analytics",
										":analytics_id"
									],
									"variable": [
										{
											"key": "analytics_id",
											"value": "CA-5dfbaa3ac-5321",
											"description": "(Required) The analytic ID"
										},
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/analytics/ca360/v1/customers/:customerId/analytics/:analytics_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"analytics",
										"ca360",
										"v1",
										"customers",
										":customerId",
										"analytics",
										":analytics_id"
									],
									"variable": [
										{
											"key": "analytics_id",
											"value": "CA-5dfbaa3ac-5321",
											"description": "(Required) The analytic ID"
										},
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Get FCRA Consumer Attributes by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/analytics/ca360/v1/customers/{{customerId}}/analytics/:analytics_id/fcra",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"analytics",
								"ca360",
								"v1",
								"customers",
								"{{customerId}}",
								"analytics",
								":analytics_id",
								"fcra"
							],
							"variable": [
								{
									"key": "analytics_id",
									"value": "CA-5dfbaa3ac-5321",
									"description": "(Required) The analytic ID"
								}
							]
						},
						"description": "Retrieve a FCRA Consumer Attributes report for a customer.\n\nUse the analytic and customer IDs to retrieve 12 months of data attributes according to the \"To\" and \"From\" date range of the report at the time it was created.\n\nIf the current date is before the end of the calendar month, then the most recent month provides all available data up to the current date.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The Consumer Attributes report was successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/analytics/ca360/v1/customers/:customerId/analytics/:analytics_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"analytics",
										"ca360",
										"v1",
										"customers",
										":customerId",
										"analytics",
										":analytics_id"
									],
									"variable": [
										{
											"key": "analytics_id",
											"value": "CA-5dfbaa3ac-5321",
											"description": "(Required) The analytic ID"
										},
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/analytics/ca360/v1/customers/:customerId/analytics/:analytics_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"analytics",
										"ca360",
										"v1",
										"customers",
										":customerId",
										"analytics",
										":analytics_id"
									],
									"variable": [
										{
											"key": "analytics_id",
											"value": "CA-5dfbaa3ac-5321",
											"description": "(Required) The analytic ID"
										},
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/analytics/ca360/v1/customers/:customerId/analytics/:analytics_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"analytics",
										"ca360",
										"v1",
										"customers",
										":customerId",
										"analytics",
										":analytics_id"
									],
									"variable": [
										{
											"key": "analytics_id",
											"value": "CA-5dfbaa3ac-5321",
											"description": "(Required) The analytic ID"
										},
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/analytics/ca360/v1/customers/:customerId/analytics/:analytics_id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"analytics",
										"ca360",
										"v1",
										"customers",
										":customerId",
										"analytics",
										":analytics_id"
									],
									"variable": [
										{
											"key": "analytics_id",
											"value": "CA-5dfbaa3ac-5321",
											"description": "(Required) The analytic ID"
										},
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				}
			],
			"description": "Generate and fetch consumer attributes (Beta)"
		},
		{
			"name": "App Registration",
			"item": [
				{
					"name": "Register App",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(201)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"appDescription\": \"The app that makes your budgeting experience awesome\",\n    \"appName\": \"Awesome Budget App_{{$guid}}\",\n    \"appUrl\": \"https://www.finicity.com/\",\n    \"ownerAddressLine1\": \"434 W Ascension Way\",\n    \"ownerAddressLine2\": \"Suite #200\",\n    \"ownerCity\": \"Murray\",\n    \"ownerCountry\": \"USA\",\n    \"ownerName\": \"Finicity\",\n    \"ownerPostalCode\": \"84123\",\n    \"ownerState\": \"UT\",\n    \"image\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjxzdmcgICAKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB2ZXJzaW9uPSIxLjEiCiAgIHZpZXdCb3g9IjAgMCAwIDAiCiAgIGhlaWdodD0iMCIKICAgd2lkdGg9IjAiPgogICAgPGcvPgo8L3N2Zz4K\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/partners/applications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"partners",
								"applications"
							]
						},
						"description": "Register a new application to access financial institutions using OAuth connections.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The app registration was successfully created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/partners/applications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"partners",
										"applications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/partners/applications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"partners",
										"applications"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/partners/applications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"partners",
										"applications"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						}
					]
				},
				{
					"name": "Modify App Registration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200 )\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const baseUrl = pm.collectionVariables.get(\"baseUrl\")\r",
									"const appKey = pm.environment.get(\"appKey\")\r",
									"const appToken = pm.globals.get(\"appToken\")\r",
									"\r",
									"// Register a test app we will update later\r",
									"console.log(\"Registering test app ...\")\r",
									"const options = {\r",
									"    url:  baseUrl + \"/aggregation/v1/partners/applications\", \r",
									"    method: 'POST',\r",
									"    header: {\r",
									"        \"Accept\": \"application/json\",\r",
									"        \"Content-type\": \"application/json\",\r",
									"        \"Finicity-App-Key\": appKey,\r",
									"        \"Finicity-App-Token\": appToken\r",
									"    },\r",
									"    body: JSON.stringify({\r",
									"        \"appDescription\": \"The app that makes your budgeting experience awesome\",\r",
									"        \"appName\": \"Awesome Budget App_\" + pm.variables.replaceIn(\"{{$guid}}\"),\r",
									"        \"appUrl\": \"https://www.finicity.com/\",\r",
									"        \"ownerAddressLine1\": \"434 W Ascension Way\",\r",
									"        \"ownerAddressLine2\": \"Suite #200\",\r",
									"        \"ownerCity\": \"Murray\",\r",
									"        \"ownerCountry\": \"USA\",\r",
									"        \"ownerName\": \"Finicity\",\r",
									"        \"ownerPostalCode\": \"84123\",\r",
									"        \"ownerState\": \"UT\",\r",
									"        \"image\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjxzdmcgICAKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB2ZXJzaW9uPSIxLjEiCiAgIHZpZXdCb3g9IjAgMCAwIDAiCiAgIGhlaWdodD0iMCIKICAgd2lkdGg9IjAiPgogICAgPGcvPgo8L3N2Zz4K\"\r",
									"    })\r",
									"}\r",
									"pm.sendRequest(options, function (err, response) {\r",
									"    pm.expect(err).to.be.null\r",
									"    pm.expect(response.code).to.equals(201)\r",
									"    pm.variables.set(\"preAppId\", response.json().preAppId)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"appDescription\": \"The app that makes your budgeting experience awesome\",\n    \"appName\": \"Awesome Budget App_{{$guid}}\",\n    \"appUrl\": \"https://www.finicity.com/\",\n    \"ownerAddressLine1\": \"434 W Ascension Way\",\n    \"ownerAddressLine2\": \"Suite #200\",\n    \"ownerCity\": \"Murray\",\n    \"ownerCountry\": \"USA\",\n    \"ownerName\": \"Finicity\",\n    \"ownerPostalCode\": \"84123\",\n    \"ownerState\": \"UT\",\n    \"image\": \"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+CjxzdmcgICAKICAgeG1sbnM6c3ZnPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICB2ZXJzaW9uPSIxLjEiCiAgIHZpZXdCb3g9IjAgMCAwIDAiCiAgIGhlaWdodD0iMCIKICAgd2lkdGg9IjAiPgogICAgPGcvPgo8L3N2Zz4K\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/partners/applications/{{preAppId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"partners",
								"applications",
								"{{preAppId}}"
							]
						},
						"description": "Update a registered application.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The app registration was updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/partners/applications/:preAppId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"partners",
										"applications",
										":preAppId"
									],
									"variable": [
										{
											"key": "preAppId",
											"value": "2581",
											"description": "(Required) The application registration tracking ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/partners/applications/:preAppId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"partners",
										"applications",
										":preAppId"
									],
									"variable": [
										{
											"key": "preAppId",
											"value": "2581",
											"description": "(Required) The application registration tracking ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/partners/applications/:preAppId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"partners",
										"applications",
										":preAppId"
									],
									"variable": [
										{
											"key": "preAppId",
											"value": "2581",
											"description": "(Required) The application registration tracking ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/partners/applications/:preAppId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"partners",
										"applications",
										":preAppId"
									],
									"variable": [
										{
											"key": "preAppId",
											"value": "2581",
											"description": "(Required) The application registration tracking ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Get App Registration Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aggregation/v2/partners/applications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v2",
								"partners",
								"applications"
							],
							"query": [
								{
									"key": "preAppId",
									"value": "2581",
									"description": "The application registration tracking ID",
									"disabled": true
								},
								{
									"key": "applicationId",
									"value": "123456789",
									"description": "The application ID",
									"disabled": true
								},
								{
									"key": "status",
									"value": "P",
									"description": "Look up app registration requests by status",
									"disabled": true
								},
								{
									"key": "appName",
									"value": "Awesome Budget App",
									"description": "Look up app registration requests by app name",
									"disabled": true
								},
								{
									"key": "submittedDate",
									"value": "1607450357",
									"description": "Look up app registration requests by the date they were submitted",
									"disabled": true
								},
								{
									"key": "modifiedDate",
									"value": "1607450357",
									"description": "Look up app registration requests by the date the request was updated. This can be used to determine when a request was updated to \"A\" or \"R\".",
									"disabled": true
								},
								{
									"key": "page",
									"value": "1",
									"description": "Index of the page of results to return",
									"disabled": true
								},
								{
									"key": "pageSize",
									"value": "20",
									"description": "Maximum number of results per page",
									"disabled": true
								}
							]
						},
						"description": "Get the status of your application registration(s).\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The app registration statuses were returned",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/partners/applications?preAppId=2581&applicationId=123456789&status=P&appName=Awesome Budget App&submittedDate=1607450357&modifiedDate=1607450357&page=1&pageSize=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"partners",
										"applications"
									],
									"query": [
										{
											"key": "preAppId",
											"value": "2581"
										},
										{
											"key": "applicationId",
											"value": "123456789"
										},
										{
											"key": "status",
											"value": "P"
										},
										{
											"key": "appName",
											"value": "Awesome Budget App"
										},
										{
											"key": "submittedDate",
											"value": "1607450357"
										},
										{
											"key": "modifiedDate",
											"value": "1607450357"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "20"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/partners/applications?preAppId=2581&applicationId=123456789&status=P&appName=Awesome Budget App&submittedDate=1607450357&modifiedDate=1607450357&page=1&pageSize=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"partners",
										"applications"
									],
									"query": [
										{
											"key": "preAppId",
											"value": "2581"
										},
										{
											"key": "applicationId",
											"value": "123456789"
										},
										{
											"key": "status",
											"value": "P"
										},
										{
											"key": "appName",
											"value": "Awesome Budget App"
										},
										{
											"key": "submittedDate",
											"value": "1607450357"
										},
										{
											"key": "modifiedDate",
											"value": "1607450357"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "20"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/partners/applications?preAppId=2581&applicationId=123456789&status=P&appName=Awesome Budget App&submittedDate=1607450357&modifiedDate=1607450357&page=1&pageSize=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"partners",
										"applications"
									],
									"query": [
										{
											"key": "preAppId",
											"value": "2581"
										},
										{
											"key": "applicationId",
											"value": "123456789"
										},
										{
											"key": "status",
											"value": "P"
										},
										{
											"key": "appName",
											"value": "Awesome Budget App"
										},
										{
											"key": "submittedDate",
											"value": "1607450357"
										},
										{
											"key": "modifiedDate",
											"value": "1607450357"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "20"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/partners/applications?preAppId=2581&applicationId=123456789&status=P&appName=Awesome Budget App&submittedDate=1607450357&modifiedDate=1607450357&page=1&pageSize=20",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"partners",
										"applications"
									],
									"query": [
										{
											"key": "preAppId",
											"value": "2581"
										},
										{
											"key": "applicationId",
											"value": "123456789"
										},
										{
											"key": "status",
											"value": "P"
										},
										{
											"key": "appName",
											"value": "Awesome Budget App"
										},
										{
											"key": "submittedDate",
											"value": "1607450357"
										},
										{
											"key": "modifiedDate",
											"value": "1607450357"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "pageSize",
											"value": "20"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Set Customer App ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    // \"invalid application id\"\r",
									"    pm.expect(pm.response.code).to.equals(400)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/customers/{{customerId}}/applications/:applicationId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"customers",
								"{{customerId}}",
								"applications",
								":applicationId"
							],
							"variable": [
								{
									"key": "applicationId",
									"value": "1234"
								}
							]
						},
						"description": "If you have multiple applications for a single client, and you want to register their applications to access financial institutions using OAuth connections, then use this API to assign applications to an existing customer.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The app was successfully assigned",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/applications/:applicationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"applications",
										":applicationId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "applicationId",
											"value": "123456789",
											"description": "(Required) The application ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/applications/:applicationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"applications",
										":applicationId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "applicationId",
											"value": "123456789",
											"description": "(Required) The application ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/applications/:applicationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"applications",
										":applicationId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "applicationId",
											"value": "123456789",
											"description": "(Required) The application ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/applications/:applicationId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"applications",
										":applicationId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "applicationId",
											"value": "123456789",
											"description": "(Required) The application ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Migrate Institution Login Accounts",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    // \"Customer does not have any accounts associated with institutionLoginId = (1234)\"\r",
									"    pm.expect(pm.response.code).to.equals(404)\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/aggregation/v2/customers/{{customerId}}/institutionLogins/:institutionLoginId/migration",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v2",
								"customers",
								"{{customerId}}",
								"institutionLogins",
								":institutionLoginId",
								"migration"
							],
							"variable": [
								{
									"key": "institutionLoginId",
									"value": "1234"
								}
							]
						},
						"description": "The `institutionLoginId` parameter uses Finicity's internal FI mapping to move accounts from the current FI legacy connection to the new OAuth FI connection.\n\nThis API returns a list of accounts for the given institution login ID.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The migration succeeded",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/customers/:customerId/institutionLogins/:institutionLoginId/migration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"customers",
										":customerId",
										"institutionLogins",
										":institutionLoginId",
										"migration"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "institutionLoginId",
											"value": "1007302745",
											"description": "(Required) The institution login ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/customers/:customerId/institutionLogins/:institutionLoginId/migration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"customers",
										":customerId",
										"institutionLogins",
										":institutionLoginId",
										"migration"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "institutionLoginId",
											"value": "1007302745",
											"description": "(Required) The institution login ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/customers/:customerId/institutionLogins/:institutionLoginId/migration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"customers",
										":customerId",
										"institutionLogins",
										":institutionLoginId",
										"migration"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "institutionLoginId",
											"value": "1007302745",
											"description": "(Required) The institution login ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/customers/:customerId/institutionLogins/:institutionLoginId/migration",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"customers",
										":customerId",
										"institutionLogins",
										":institutionLoginId",
										"migration"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "institutionLoginId",
											"value": "1007302745",
											"description": "(Required) The institution login ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				}
			],
			"description": "Register and assign apps to customers"
		},
		{
			"name": "Assets",
			"item": [
				{
					"name": "Get Asset by Customer and ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const baseUrl = pm.collectionVariables.get(\"baseUrl\")\r",
									"const appKey = pm.environment.get(\"appKey\")\r",
									"const customerId = pm.environment.get(\"customerId\")\r",
									"const appToken = pm.globals.get(\"appToken\")\r",
									"\r",
									"const assetId = pm.variables.get(\"assetId\")\r",
									"if (assetId) {\r",
									"    return\r",
									"}\r",
									"\r",
									"console.log(\"Creating asset ID ...\")\r",
									"const options = {\r",
									"    url:  baseUrl + \"/aggregation/v1/customers/\"+ customerId + \"/payStatements\",\r",
									"    method: 'POST',\r",
									"    header: {\r",
									"        \"Accept\": \"application/json\",\r",
									"        \"Content-Type\": \"application/json\",\r",
									"        \"Finicity-App-Key\": appKey,\r",
									"        \"Finicity-App-Token\": appToken\r",
									"    },\r",
									"    body: JSON.stringify({\r",
									"        \"label\": \"lastPayPeriod\",\r",
									"        \"statement\": \"VGhpcyBtdXN0IGJlIGFuIGltYWdl\"\r",
									"    })\r",
									"}\r",
									"pm.sendRequest(options, function (err, response) {\r",
									"    pm.expect(err).to.be.null\r",
									"    pm.expect(response.code).to.equals(200)\r",
									"    pm.variables.set(\"assetId\", response.json().assetId)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "*/*",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/customers/{{customerId}}/assets/{{assetId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"customers",
								"{{customerId}}",
								"assets",
								"{{assetId}}"
							]
						},
						"description": "Retrieve a binary file for the given asset ID.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The asset was successfully downloaded",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/assets/:assetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"assets",
										":assetId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "assetId",
											"value": "097545c5-1c2a-4f20-a5ef-77f0820344c9-2018601178",
											"description": "(Required) The asset ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/octet-stream"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/assets/:assetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"assets",
										":assetId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "assetId",
											"value": "097545c5-1c2a-4f20-a5ef-77f0820344c9-2018601178",
											"description": "(Required) The asset ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/assets/:assetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"assets",
										":assetId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "assetId",
											"value": "097545c5-1c2a-4f20-a5ef-77f0820344c9-2018601178",
											"description": "(Required) The asset ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/assets/:assetId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"assets",
										":assetId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "assetId",
											"value": "097545c5-1c2a-4f20-a5ef-77f0820344c9-2018601178",
											"description": "(Required) The asset ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				}
			],
			"description": "Download asset files"
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Create Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"partnerId\": \"{{partnerId}}\",\n    \"partnerSecret\": \"{{partnerSecret}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/aggregation/v2/partners/authentication",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v2",
								"partners",
								"authentication"
							]
						},
						"description": "Send Partner ID and Partner Secret to the Partner Authentication service to obtain a token for accessing Finicity APIs.\n* The token is valid for two hours and is required on all calls to the Finicity APIs\n* As a best practice, use a single token for all calls. Assign a timestamp for each token, and then check the current timestamp before making any calls. If the token is greater than 90 minutes, generate a new one.\n* ⚠️ After five failed attempts to authenticate, your account will be locked. Contact [support@finicity.com](mailto:support@finicity.com) to get help resetting your account.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The access token was successfully created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/partners/authentication",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"partners",
										"authentication"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/partners/authentication",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"partners",
										"authentication"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check Partner ID, Partner Secret or Finicity-App-Key.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/partners/authentication",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"partners",
										"authentication"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10026,\n \"message\": \"Missing parameter (Finicity-App-Key)\"\n}"
						}
					]
				},
				{
					"name": "Modify Partner Secret",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(204)\r",
									"})\r",
									"\r",
									"console.log(\"Request successful. Reverting partner secret ...\")\r",
									"const baseUrl = pm.collectionVariables.get(\"baseUrl\")\r",
									"const partnerId = pm.environment.get(\"partnerId\")\r",
									"const partnerSecret = pm.environment.get(\"partnerSecret\")\r",
									"const appKey = pm.environment.get(\"appKey\")\r",
									"const appToken = pm.collectionVariables.get(\"appToken\")\r",
									"\r",
									"const options = {\r",
									"    url:  baseUrl + \"/aggregation/v2/partners/authentication\", \r",
									"    method: 'PUT',\r",
									"    header: {\r",
									"        \"Accept\": \"application/json\",\r",
									"        \"Content-type\": \"application/json\",\r",
									"        \"Finicity-App-Key\": appKey\r",
									"    },\r",
									"    body: JSON.stringify({\r",
									"            \"partnerId\": partnerId,\r",
									"            \"partnerSecret\": partnerSecret + \"_updated\",\r",
									"            \"newPartnerSecret\": partnerSecret\r",
									"        })\r",
									"}\r",
									"pm.sendRequest(options, function (err, response) {\r",
									"    pm.test(\"Clean-up\", function () {\r",
									"        pm.expect(err).to.be.null\r",
									"        pm.expect(response.code).to.equal(204)\r",
									"    })\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"partnerId\": \"{{partnerId}}\",\n    \"partnerSecret\": \"{{partnerSecret}}\",\n    \"newPartnerSecret\": \"{{partnerSecret}}_updated\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/aggregation/v2/partners/authentication",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v2",
								"partners",
								"authentication"
							]
						},
						"description": "Change the Partner Secret used to authenticate this partner.\n\nThe secret does not expire, but can be changed by calling this API. A valid Partner Secret may contain upper and lowercase characters, numbers, and the characters !, @, #, $, %, &, *, _, -, +. It must include at least one number and at least one letter, and its length should be between 12 and 255 characters.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The Partner Secret was successfully updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/partners/authentication",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"partners",
										"authentication"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/partners/authentication",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"partners",
										"authentication"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 24437,\n \"message\": \"New password is not as per policy\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check Partner ID, Partner Secret or Finicity-App-Key.",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/partners/authentication",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"partners",
										"authentication"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10026,\n \"message\": \"Missing parameter (Finicity-App-Key)\"\n}"
						}
					]
				}
			],
			"description": "Generate authentication tokens and manage credentials"
		},
		{
			"name": "Bank Statements",
			"item": [
				{
					"name": "Get Customer Account Statement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/customers/{{customerId}}/accounts/{{accountId}}/statement?index=1",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"customers",
								"{{customerId}}",
								"accounts",
								"{{accountId}}",
								"statement"
							],
							"query": [
								{
									"key": "index",
									"value": "1",
									"description": "Request statements from 1-24. By default, 1 is the most recent statement. Increase the index value to count back (by month) and retrieve its most recent statement."
								},
								{
									"key": "type",
									"value": "taxStatement",
									"description": "The type of statement to retrieve",
									"disabled": true
								}
							]
						},
						"description": "Retrieve the customer's bank statements in PDF format. Up to 24 months of history is available depending on the financial institution. Since this is a premium service, charges incur per each successful statement retrieved. \n\nFor certified financial institutions, statements are available for the following account types: \n* Checking\n* Savings\n* Money market\n* CDs\n* Investments\n* Mortgage\n* Credit cards\n* Loans\n* Line of credit\n* Student Loans\n\nNote: setting the timeout to 180 seconds is recommended to allow enough time for a response.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The statement was successfully downloaded as a PDF file",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/statement?index=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"statement"
									],
									"query": [
										{
											"key": "index",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/octet-stream"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The response contains an MFA challenge in XML or JSON format. Contact your Account Manager or Systems Engineers to determine the best route to handle this error.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/statement?index=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"statement"
									],
									"query": [
										{
											"key": "index",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Non-Authoritative Information (since HTTP/1.1)",
							"code": 203,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/statement?index=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"statement"
									],
									"query": [
										{
											"key": "index",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/statement?index=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"statement"
									],
									"query": [
										{
											"key": "index",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/statement?index=1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"statement"
									],
									"query": [
										{
											"key": "index",
											"value": "1"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Generate Statement Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([202, 429, 401])\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"statementReportData\": {\n        \"accountId\": {{accountId}},\n        \"index\": 1\n    },\n    \"reportCustomFields\": [\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        },\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/decisioning/v2/customers/{{customerId}}/statement",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decisioning",
								"v2",
								"customers",
								"{{customerId}}",
								"statement"
							],
							"query": [
								{
									"key": "callbackUrl",
									"value": "https://finicity-test/webhook",
									"description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.",
									"disabled": true
								}
							]
						},
						"description": "Generate a Statement Report report for the given accounts under the given customer.\n\nThis is a premium service. A billable event will be created upon the successful generation of the Statement Report. \n\nBefore calling this API, a consumer must be created for the given customer ID (see Consumers APIs).\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/statement?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"statement"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/statement?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"statement"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/statement?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"statement"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/statement?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"statement"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				}
			],
			"description": "Fetch account statements and generate reports asynchronously",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const baseUrl = pm.collectionVariables.get(\"baseUrl\")",
							"const appKey = pm.environment.get(\"appKey\")",
							"const customerId = pm.environment.get(\"customerId\")",
							"const appToken = pm.globals.get(\"appToken\")",
							"",
							"const accountId = pm.variables.get(\"accountId\")",
							"if (accountId) {",
							"    return",
							"}",
							"",
							"console.log(\"Fetching account ID ...\")",
							"const options = {",
							"    url:  baseUrl + \"/aggregation/v1/customers/\"+ customerId + \"/accounts\",",
							"    method: 'GET',",
							"    header: {",
							"        \"Accept\": \"application/json\",",
							"        \"Finicity-App-Key\": appKey,",
							"        \"Finicity-App-Token\": appToken",
							"    }",
							"}",
							"pm.sendRequest(options, function (err, response) {",
							"    pm.expect(err).to.be.null",
							"    pm.expect(response.code).to.equals(200)",
							"    pm.variables.set(\"accountId\", response.json().accounts[0].id)",
							"})"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Cash Flow",
			"item": [
				{
					"name": "Generate Cash Flow Report - Business",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([202, 429, 401])\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reportCustomFields\": [\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        },\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        }\n    ],\n    \"showNsf\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/decisioning/v2/customers/{{customerId}}/cashFlowBusiness",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decisioning",
								"v2",
								"customers",
								"{{customerId}}",
								"cashFlowBusiness"
							],
							"query": [
								{
									"key": "callbackUrl",
									"value": "https://finicity-test/webhook",
									"description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.",
									"disabled": true
								}
							]
						},
						"description": "Generate a Cash Flow Report (Business) report for all checking and savings under the given customer. This service retrieves up to two years of transaction history for the given account. It then uses this information to generate the CFR report. A consumer is not required to generate this report.\n\nThis report is not provided under FCRA rules, and this report is not available in the Finicity Consumer Portal for the borrower to view.\n\nIf no account type of checking or savings is found, the service will return HTTP 400 Bad Request.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/cashFlowBusiness?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"cashFlowBusiness"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/cashFlowBusiness?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"cashFlowBusiness"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/cashFlowBusiness?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"cashFlowBusiness"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/cashFlowBusiness?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"cashFlowBusiness"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Generate Cash Flow Report - Personal",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([202, 429, 401])\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reportCustomFields\": [\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        },\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        }\n    ],\n    \"showNsf\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/decisioning/v2/customers/{{customerId}}/cashFlowPersonal",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decisioning",
								"v2",
								"customers",
								"{{customerId}}",
								"cashFlowPersonal"
							],
							"query": [
								{
									"key": "callbackUrl",
									"value": "https://finicity-test/webhook",
									"description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.",
									"disabled": true
								}
							]
						},
						"description": "Generate a Cash Flow Report (Personal) report for all checking and savings under the given customer. This service retrieves up to two years of transaction history for the given account. It then uses this information to generate the CFR report.\n\nThis report is provided under FCRA rules, with Finicity acting as the CRA (Consumer Reporting Agency). If an individual account is included in the report - for example, with an individual acting as an personal guarantor on the loan - then this version of the report should be used. In case of an adverse action on the loan where the decision was based on this report, then the borrower can be referred to the [Finicity Consumer Portal](https://consumer.finicityreports.com) where they can view this report and submit a dispute if they feel any information in this report is inaccurate.\n\nBefore calling this API, a consumer must be created for the given customer ID (see Consumers APIs).\n\nIf no account type of checking or savings is found, the service will return HTTP 400 Bad Request.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/cashFlowPersonal?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"cashFlowPersonal"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/cashFlowPersonal?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"cashFlowPersonal"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/cashFlowPersonal?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"cashFlowPersonal"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/cashFlowPersonal?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"cashFlowPersonal"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				}
			],
			"description": "Generate cash flow reports asynchronously"
		},
		{
			"name": "Connect 🔗",
			"item": [
				{
					"name": "Generate Connect URL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"partnerId\": \"{{partnerId}}\",\n    \"customerId\": \"{{customerId}}\",\n    \"language\": \"en\",\n    \"consumerId\": \"0bf46322c167b562e6cbed9d40e19a4c\",\n    \"redirectUri\": \"https://www.finicity.com/connect/\",\n    \"webhookContentType\": \"application/json\",\n    \"webhookData\": {},\n    \"webhookHeaders\": {},\n    \"optionalConsumerInfo\": {\n        \"ssn\": \"999999999\",\n        \"dob\": 1607450357\n    },\n    \"singleUseUrl\": true,\n    \"institutionSettings\": {},\n    \"fromDate\": 1607450357,\n    \"reportCustomFields\": [\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        },\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/connect/v2/generate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"connect",
								"v2",
								"generate"
							]
						},
						"description": "Generate a Connect 2.0 URL link to add within your own applications.\n\nIn option, use the `experience` parameter to call Connect (per session) in the body of the request. Configure the `experience` parameter to change the brand color, logo, icon, which credit decisioning report to generate when the Connect application completes, and more.\n\nNote: contact your Sales Account Team to set up the `experience` parameter.\n\n \nMVS Developers: You can pre-populate the consumer's SSN on the \"Find employment records\" page at the beginning of the MVS payroll app. Pass the SSN value for the consumer in the body of the request call.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The URL link was successfully generated",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connect/v2/generate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connect",
										"v2",
										"generate"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connect/v2/generate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connect",
										"v2",
										"generate"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connect/v2/generate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connect",
										"v2",
										"generate"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						}
					]
				},
				{
					"name": "Generate Lite Connect URL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"partnerId\": \"{{partnerId}}\",\n    \"customerId\": \"{{customerId}}\",\n    \"language\": \"en\",\n    \"institutionId\": 4222,\n    \"redirectUri\": \"https://www.finicity.com/connect/\",\n    \"webhookContentType\": \"application/json\",\n    \"webhookData\": {},\n    \"webhookHeaders\": {},\n    \"singleUseUrl\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/connect/v2/generate/lite",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"connect",
								"v2",
								"generate",
								"lite"
							]
						},
						"description": "Connect Lite is a variation of Connect Full (`POST /connect/v2/generate`), which has a limited set of features.\n* Sign in, user's credentials, and Multi-Factor Authentication (MFA)\n* No user account management\n\nThe Connect Web SDK isn't a requirement when using Connect lite. However, if you want to use the SDK events, routes, and user events, then you must integrate with the Connect Web SDK.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The URL link was successfully generated",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connect/v2/generate/lite",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connect",
										"v2",
										"generate",
										"lite"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connect/v2/generate/lite",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connect",
										"v2",
										"generate",
										"lite"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connect/v2/generate/lite",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connect",
										"v2",
										"generate",
										"lite"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						}
					]
				},
				{
					"name": "Generate Fix Connect URL",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    // \"Customer does not have any accounts associated with institutionLoginId.\"\"\r",
									"    pm.expect(pm.response.code).to.equals(404)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"partnerId\": \"{{partnerId}}\",\n    \"customerId\": \"{{customerId}}\",\n    \"language\": \"en\",\n    \"institutionLoginId\": \"1007302745\",\n    \"redirectUri\": \"https://www.finicity.com/connect/\",\n    \"webhookContentType\": \"application/json\",\n    \"webhookData\": {},\n    \"webhookHeaders\": {},\n    \"singleUseUrl\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/connect/v2/generate/fix",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"connect",
								"v2",
								"generate",
								"fix"
							]
						},
						"description": "Use the Connect Fix API when the following conditions occur:\n* The connection to the user's financial institution is lost\n* The user's credentials were updated (for any number of reasons)\n* The user's MFA challenge has expired\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The URL link was successfully generated",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connect/v2/generate/fix",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connect",
										"v2",
										"generate",
										"fix"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connect/v2/generate/fix",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connect",
										"v2",
										"generate",
										"fix"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connect/v2/generate/fix",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connect",
										"v2",
										"generate",
										"fix"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connect/v2/generate/fix",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connect",
										"v2",
										"generate",
										"fix"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Send Connect Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"partnerId\": \"{{partnerId}}\",\n    \"customerId\": \"{{customerId}}\",\n    \"language\": \"en\",\n    \"consumerId\": \"0bf46322c167b562e6cbed9d40e19a4c\",\n    \"email\": {\n        \"to\": \"alex.salido@finicity.com\",\n        \"supportPhone\": \"800-555-5555\",\n        \"subject\": \"Verify your income\",\n        \"firstName\": \"Bob\",\n        \"institutionName\": \"Acme Lending\",\n        \"institutionAddress\": \"222 Winipeg Drive SLC UT, 84109\",\n        \"signature\": [\n            \"Cindy Mayfield\",\n            \"Senior Loan Officer\",\n            \"Direct 123-456-7890\"\n        ]\n    },\n    \"redirectUri\": \"https://www.finicity.com/connect/\",\n    \"webhookContentType\": \"application/json\",\n    \"webhookData\": {},\n    \"webhookHeaders\": {},\n    \"institutionSettings\": {},\n    \"singleUseUrl\": true,\n    \"fromDate\": 1607450357,\n    \"reportCustomFields\": [\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        },\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        }\n    ],\n    \"optionalConsumerInfo\": {\n        \"ssn\": \"999999999\",\n        \"dob\": 1607450357\n    }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/connect/v2/send/email",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"connect",
								"v2",
								"send",
								"email"
							]
						},
						"description": "Same as Connect Full (`POST /connect/v2/generate`) but send a Connect email to a consumer.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The URL link was successfully generated and the email sent",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connect/v2/send/email",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connect",
										"v2",
										"send",
										"email"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connect/v2/send/email",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connect",
										"v2",
										"send",
										"email"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connect/v2/send/email",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connect",
										"v2",
										"send",
										"email"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						}
					]
				},
				{
					"name": "Generate Connect URL - Joint Borrower",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"partnerId\": \"{{partnerId}}\",\n    \"language\": \"en\",\n    \"borrowers\": [\n        {\n            \"customerId\": \"{{customerId}}\",\n            \"consumerId\": \"0bf46322c167b562e6cbed9d40e19a4c\",\n            \"type\": \"primary\",\n            \"optionalConsumerInfo\": {\n                \"ssn\": \"999999999\",\n                \"dob\": 1607450357\n            }\n        },\n        {\n            \"customerId\": \"{{customerId}}\",\n            \"consumerId\": \"0bf46322c167b562e6cbed9d40e19a4c\",\n            \"type\": \"jointBorrower\",\n            \"optionalConsumerInfo\": {\n                \"ssn\": \"999999999\",\n                \"dob\": 1607450357\n            }\n        }\n    ],\n    \"redirectUri\": \"https://www.finicity.com/connect/\",\n    \"webhookContentType\": \"application/json\",\n    \"webhookData\": {},\n    \"webhookHeaders\": {},\n    \"institutionSettings\": {},\n    \"fromDate\": 1607450357,\n    \"reportCustomFields\": [\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        },\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        }\n    ],\n    \"singleUseUrl\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/connect/v2/generate/jointBorrower",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"connect",
								"v2",
								"generate",
								"jointBorrower"
							]
						},
						"description": "Same as Connect Full (`POST /connect/v2/generate`) but for joint borrowers.\n\nMVS prompts both the primary and joint borrower to enter each of their financial, payroll, and paystub information in the same Connect session.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The URL link was successfully generated",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connect/v2/generate/jointBorrower",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connect",
										"v2",
										"generate",
										"jointBorrower"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connect/v2/generate/jointBorrower",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connect",
										"v2",
										"generate",
										"jointBorrower"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connect/v2/generate/jointBorrower",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connect",
										"v2",
										"generate",
										"jointBorrower"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						}
					]
				},
				{
					"name": "Send Connect Email - Joint Borrower",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"partnerId\": \"{{partnerId}}\",\n    \"language\": \"en\",\n    \"borrowers\": [\n        {\n            \"customerId\": \"{{customerId}}\",\n            \"consumerId\": \"0bf46322c167b562e6cbed9d40e19a4c\",\n            \"type\": \"primary\",\n            \"optionalConsumerInfo\": {\n                \"ssn\": \"999999999\",\n                \"dob\": 1607450357\n            }\n        },\n        {\n            \"customerId\": \"{{customerId}}\",\n            \"consumerId\": \"0bf46322c167b562e6cbed9d40e19a4c\",\n            \"type\": \"jointBorrower\",\n            \"optionalConsumerInfo\": {\n                \"ssn\": \"999999999\",\n                \"dob\": 1607450357\n            }\n        }\n    ],\n    \"email\": {\n        \"to\": \"alex.salido@finicity.com\",\n        \"supportPhone\": \"800-555-5555\",\n        \"subject\": \"Verify your income\",\n        \"firstName\": \"Bob\",\n        \"institutionName\": \"Acme Lending\",\n        \"institutionAddress\": \"222 Winipeg Drive SLC UT, 84109\",\n        \"signature\": [\n            \"Cindy Mayfield\",\n            \"Senior Loan Officer\",\n            \"Direct 123-456-7890\"\n        ]\n    },\n    \"redirectUri\": \"https://www.finicity.com/connect/\",\n    \"webhookContentType\": \"application/json\",\n    \"webhookData\": {},\n    \"webhookHeaders\": {},\n    \"institutionSettings\": {},\n    \"fromDate\": 1607450357,\n    \"reportCustomFields\": [\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        },\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        }\n    ],\n    \"singleUseUrl\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/connect/v2/send/email/jointBorrower",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"connect",
								"v2",
								"send",
								"email",
								"jointBorrower"
							]
						},
						"description": "Same as Connect Joint Borrower (`POST /connect/v2/generate/jointBorrower`) but send a Connect email  to at least one of the joint borrower's email addresses. \n\nWhen the consumer opens the email, MVS prompts both the primary and joint borrower to enter each of their financial, payroll, and paystub information in the same Connect session.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The URL link was successfully generated and the email sent.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connect/v2/send/email/jointBorrower",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connect",
										"v2",
										"send",
										"email",
										"jointBorrower"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connect/v2/send/email/jointBorrower",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connect",
										"v2",
										"send",
										"email",
										"jointBorrower"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/connect/v2/send/email/jointBorrower",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"connect",
										"v2",
										"send",
										"email",
										"jointBorrower"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						}
					]
				}
			],
			"description": "Allow customers to log into their financial institutions and grant Finicity authorization"
		},
		{
			"name": "Consumers",
			"item": [
				{
					"name": "Create Consumer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    // \"A consumer already exists for customer 5025024821\"\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 409])\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Homer\",\n    \"lastName\": \"Loanseeke\",\n    \"address\": \"434 W Ascension Way\",\n    \"city\": \"Murray\",\n    \"state\": \"UT\",\n    \"zip\": \"84123\",\n    \"phone\": \"1-800-986-3343\",\n    \"ssn\": \"999601111\",\n    \"birthday\": {\n        \"year\": 1970,\n        \"month\": 7,\n        \"dayOfMonth\": 4\n    },\n    \"email\": \"finicity@test.com\",\n    \"suffix\": \"Mr\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/decisioning/v1/customers/{{customerId}}/consumer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decisioning",
								"v1",
								"customers",
								"{{customerId}}",
								"consumer"
							]
						},
						"description": "Create a consumer record associated with the given customer. A consumer persists as the owner of any reports that are generated, even after the original customer is deleted from the system.\n\nA consumer must be created for the given customer before calling any of the Generate Report services.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The consumer was successfully created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/customers/:customerId/consumer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"customers",
										":customerId",
										"consumer"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"0bf46322c167b562e6cbed9d40e19a4c\",\n \"createdDate\": 1607450357,\n \"customerId\": 1005061234\n}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/customers/:customerId/consumer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"customers",
										":customerId",
										"consumer"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/customers/:customerId/consumer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"customers",
										":customerId",
										"consumer"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/customers/:customerId/consumer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"customers",
										":customerId",
										"consumer"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						},
						{
							"name": "The resource already exists",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/customers/:customerId/consumer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"customers",
										":customerId",
										"consumer"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 11000,\n \"message\": \"A consumer already exists for customer 4025024821\"\n}"
						}
					]
				},
				{
					"name": "Get Consumer For Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/decisioning/v1/customers/{{customerId}}/consumer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decisioning",
								"v1",
								"customers",
								"{{customerId}}",
								"consumer"
							]
						},
						"description": "Get the details of a consumer record by customer ID.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The consumer was successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/customers/:customerId/consumer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"customers",
										":customerId",
										"consumer"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/customers/:customerId/consumer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"customers",
										":customerId",
										"consumer"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/customers/:customerId/consumer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"customers",
										":customerId",
										"consumer"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/customers/:customerId/consumer",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"customers",
										":customerId",
										"consumer"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Get Consumer by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const baseUrl = pm.collectionVariables.get(\"baseUrl\")\r",
									"const appKey = pm.environment.get(\"appKey\")\r",
									"const customerId = pm.environment.get(\"customerId\")\r",
									"const appToken = pm.globals.get(\"appToken\")\r",
									"\r",
									"console.log(\"Fetching consumer ID ...\")\r",
									"const options = {\r",
									"    url:  baseUrl + \"/decisioning/v1/customers/\"+ customerId + \"/consumer\", \r",
									"    method: 'GET',\r",
									"    header: {\r",
									"        \"Accept\": \"application/json\",\r",
									"        \"Finicity-App-Key\": appKey,\r",
									"        \"Finicity-App-Token\": appToken\r",
									"    }\r",
									"}\r",
									"pm.sendRequest(options, function (err, response) {\r",
									"    pm.expect(err).to.be.null\r",
									"    pm.expect(response.code).to.equals(200)\r",
									"    pm.variables.set(\"consumerId\", response.json().id)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/decisioning/v1/consumers/{{consumerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decisioning",
								"v1",
								"consumers",
								"{{consumerId}}"
							]
						},
						"description": "Get the details of a consumer record by consumer ID.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The consumer was successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/consumers/:consumerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"consumers",
										":consumerId"
									],
									"variable": [
										{
											"key": "consumerId",
											"value": "0bf46322c167b562e6cbed9d40e19a4c",
											"description": "(Required) The consumer ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/consumers/:consumerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"consumers",
										":consumerId"
									],
									"variable": [
										{
											"key": "consumerId",
											"value": "0bf46322c167b562e6cbed9d40e19a4c",
											"description": "(Required) The consumer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/consumers/:consumerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"consumers",
										":consumerId"
									],
									"variable": [
										{
											"key": "consumerId",
											"value": "0bf46322c167b562e6cbed9d40e19a4c",
											"description": "(Required) The consumer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/consumers/:consumerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"consumers",
										":consumerId"
									],
									"variable": [
										{
											"key": "consumerId",
											"value": "0bf46322c167b562e6cbed9d40e19a4c",
											"description": "(Required) The consumer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Modify Consumer by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(204)\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const baseUrl = pm.collectionVariables.get(\"baseUrl\")\r",
									"const appKey = pm.environment.get(\"appKey\")\r",
									"const customerId = pm.environment.get(\"customerId\")\r",
									"const appToken = pm.globals.get(\"appToken\")\r",
									"\r",
									"console.log(\"Fetching consumer ID ...\")\r",
									"const options = {\r",
									"    url:  baseUrl + \"/decisioning/v1/customers/\"+ customerId + \"/consumer\", \r",
									"    method: 'GET',\r",
									"    header: {\r",
									"        \"Accept\": \"application/json\",\r",
									"        \"Finicity-App-Key\": appKey,\r",
									"        \"Finicity-App-Token\": appToken\r",
									"    }\r",
									"}\r",
									"pm.sendRequest(options, function (err, response) {\r",
									"    pm.expect(err).to.be.null\r",
									"    pm.expect(response.code).to.equals(200)\r",
									"    pm.variables.set(\"consumerId\", response.json().id)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"John\",\n    \"lastName\": \"Smith\",\n    \"address\": \"434 W Ascension Way\",\n    \"city\": \"Murray\",\n    \"state\": \"UT\",\n    \"zip\": \"84123\",\n    \"phone\": \"1-800-986-3343\",\n    \"ssn\": \"999601111\",\n    \"birthday\": {\n        \"year\": 1970,\n        \"month\": 7,\n        \"dayOfMonth\": 4\n    },\n    \"email\": \"finicity@test.com\",\n    \"suffix\": \"Mr\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/decisioning/v1/consumers/{{consumerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decisioning",
								"v1",
								"consumers",
								"{{consumerId}}"
							]
						},
						"description": "Modify an existing consumer. All fields are required for a consumer record, but individual fields for this call are optional because fields that are not specified will be left unchanged.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The consumer was successfully updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/consumers/:consumerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"consumers",
										":consumerId"
									],
									"variable": [
										{
											"key": "consumerId",
											"value": "0bf46322c167b562e6cbed9d40e19a4c",
											"description": "(Required) The consumer ID"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/consumers/:consumerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"consumers",
										":consumerId"
									],
									"variable": [
										{
											"key": "consumerId",
											"value": "0bf46322c167b562e6cbed9d40e19a4c",
											"description": "(Required) The consumer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/consumers/:consumerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"consumers",
										":consumerId"
									],
									"variable": [
										{
											"key": "consumerId",
											"value": "0bf46322c167b562e6cbed9d40e19a4c",
											"description": "(Required) The consumer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/consumers/:consumerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"consumers",
										":consumerId"
									],
									"variable": [
										{
											"key": "consumerId",
											"value": "0bf46322c167b562e6cbed9d40e19a4c",
											"description": "(Required) The consumer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				}
			],
			"description": "Create and manage consumers associated with customers in order to use report services"
		},
		{
			"name": "Customers",
			"item": [
				{
					"name": "Add Testing Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const baseUrl = pm.collectionVariables.get(\"baseUrl\")\r",
									"const appKey = pm.environment.get(\"appKey\")\r",
									"const appToken = pm.globals.get(\"appToken\")\r",
									"\r",
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(201)\r",
									"})\r",
									"\r",
									"if (pm.response.code !== 201) {\r",
									"    // Nothing to do\r",
									"    return\r",
									"}\r",
									"\r",
									"console.log(\"Request successful. Deleting created customer ...\")\r",
									"const options = {\r",
									"    url:  baseUrl + \"/aggregation/v1/customers/\" + pm.response.json().id, \r",
									"    method: 'DELETE',\r",
									"    header: {\r",
									"        \"Accept\": \"application/json\",\r",
									"        \"Finicity-App-Key\": appKey,\r",
									"        \"Finicity-App-Token\": appToken\r",
									"    }\r",
									"}\r",
									"pm.sendRequest(options, function (err, response) {\r",
									"    pm.test(\"Clean-up\", function () {\r",
									"        pm.expect(err).to.be.null\r",
									"        pm.expect(response.code).to.equal(204)\r",
									"    })\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"customer_{{$timestamp}}\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Smith\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/aggregation/v2/customers/testing",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v2",
								"customers",
								"testing"
							]
						},
						"description": "Enroll a testing customer ([Test Drive](https://signup.finicity.com/) accounts).\n\nFor using testing customers with FinBank OAuth, you must register a test application with your systems engineer or account manager. Then, use that testing `applicationId` when creating testing customers.\n\nTesting Customers can access FinBank profiles (except \"FinBank Billable\" profiles), and cannot access live financial institutions.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The customer was successfully created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/customers/testing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"customers",
										"testing"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"1005061234\",\n \"username\": \"customerusername1\",\n \"createdDate\": 1607450357\n}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/customers/testing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"customers",
										"testing"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/customers/testing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"customers",
										"testing"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						}
					]
				},
				{
					"name": "Add Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const baseUrl = pm.collectionVariables.get(\"baseUrl\")\r",
									"const appKey = pm.environment.get(\"appKey\")\r",
									"const appToken = pm.globals.get(\"appToken\")\r",
									"\r",
									"pm.test(\"Check status code\", function () {\r",
									"    // HTTP 401: \"Invalid (Finicity-App-Key)\", not available from the Test Drive\r",
									"    pm.expect([201, 401]).contain(pm.response.code)\r",
									"})\r",
									"\r",
									"if (pm.response.code !== 201) {\r",
									"    // Nothing to do\r",
									"    return\r",
									"}\r",
									"\r",
									"console.log(\"Request successful. Deleting created customer ...\")\r",
									"const options = {\r",
									"    url:  baseUrl + \"/aggregation/v1/customers/\" + pm.response.json().id, \r",
									"    method: 'DELETE',\r",
									"    header: {\r",
									"        \"Accept\": \"application/json\",\r",
									"        \"Finicity-App-Key\": appKey,\r",
									"        \"Finicity-App-Token\": appToken\r",
									"    }\r",
									"}\r",
									"pm.sendRequest(options, function (err, response) {\r",
									"    pm.test(\"Clean-up\", function () {\r",
									"        pm.expect(err).to.be.null\r",
									"        pm.expect(response.code).to.equal(204)\r",
									"    })\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"customer_{{$timestamp}}\",\n    \"firstName\": \"John\",\n    \"lastName\": \"Smith\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/aggregation/v2/customers/active",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v2",
								"customers",
								"active"
							]
						},
						"description": "Enroll an active customer, which is the actual owner of one or more real-world accounts. This is a billable customer.\n\nActive customers must use the \"FinBank Billable\" profiles for testing purposes.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The customer was successfully created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/customers/active",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"customers",
										"active"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"1005061234\",\n \"username\": \"customerusername1\",\n \"createdDate\": 1607450357\n}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/customers/active",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"customers",
										"active"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/customers/active",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"customers",
										"active"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The service can't accept more requests or is not available from the [Test Drive](https://signup.finicity.com/).",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/customers/active",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"customers",
										"active"
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Customers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/customers?username=&type=&search=&start=1&limit=25",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"customers"
							],
							"query": [
								{
									"key": "username",
									"value": "",
									"description": "Username for exact match (will return 0 or 1 record)"
								},
								{
									"key": "type",
									"value": "",
									"description": "\"testing\" or \"active\" to return only customers of that type, or leave empty to return all customers"
								},
								{
									"key": "search",
									"value": "",
									"description": "The text you wish to match. Leave this empty if you wish to return all customers. Must be URL-encoded (see: [Handling Spaces in Queries](https://docs.finicity.com/endpoint-syntax-and-format/))."
								},
								{
									"key": "start",
									"value": "1",
									"description": "Index of the page of results to return"
								},
								{
									"key": "limit",
									"value": "25",
									"description": "Maximum number of results per page"
								}
							]
						},
						"description": "Find all customers enrolled by the current partner, where the search text is found in the customer's username or any combination of `firstName` and `lastName` fields. If no search text is provided, all customers will be returned.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "Customers were successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers?username=customerusername1&type=active&search=searchvalue&start=1&limit=25",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers"
									],
									"query": [
										{
											"key": "username",
											"value": "customerusername1"
										},
										{
											"key": "type",
											"value": "active"
										},
										{
											"key": "search",
											"value": "searchvalue"
										},
										{
											"key": "start",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "25"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers?username=customerusername1&type=active&search=searchvalue&start=1&limit=25",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers"
									],
									"query": [
										{
											"key": "username",
											"value": "customerusername1"
										},
										{
											"key": "type",
											"value": "active"
										},
										{
											"key": "search",
											"value": "searchvalue"
										},
										{
											"key": "start",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "25"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers?username=customerusername1&type=active&search=searchvalue&start=1&limit=25",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers"
									],
									"query": [
										{
											"key": "username",
											"value": "customerusername1"
										},
										{
											"key": "type",
											"value": "active"
										},
										{
											"key": "search",
											"value": "searchvalue"
										},
										{
											"key": "start",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "25"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						}
					]
				},
				{
					"name": "Get Customer With App Data by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    // No registered partner applications found\r",
									"    pm.expect(pm.response.code).to.equals(404)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/customers/{{customerId}}/application",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"customers",
								"{{customerId}}",
								"application"
							]
						},
						"description": "Retrieve a customer along with additional details about the OAuth application.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The customer was successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/application",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"application"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/application",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"application"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/application",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"application"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/application",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"application"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Get Customer by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/customers/{{customerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"customers",
								"{{customerId}}"
							]
						},
						"description": "Retrieve a customer by ID.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The customer was successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Modify Customer by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(204)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"New First Name\",\n    \"lastName\": \"New Last Name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/customers/{{customerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"customers",
								"{{customerId}}"
							]
						},
						"description": "Modify an enrolled customer by ID.\n\nYou must specify either `firstName`, `lastName`, or both in the request.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The customer was successfully updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Delete Customer by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(204)\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const baseUrl = pm.collectionVariables.get(\"baseUrl\")\r",
									"const appKey = pm.environment.get(\"appKey\")\r",
									"const appToken = pm.globals.get(\"appToken\")\r",
									"\r",
									"// Create a test customer we will delete later\r",
									"console.log(\"Creating test customer ...\")\r",
									"const options = {\r",
									"    url:  baseUrl + \"/aggregation/v2/customers/testing\", \r",
									"    method: 'POST',\r",
									"    header: {\r",
									"        \"Accept\": \"application/json\",\r",
									"        \"Content-type\": \"application/json\",\r",
									"        \"Finicity-App-Key\": appKey,\r",
									"        \"Finicity-App-Token\": appToken\r",
									"    },\r",
									"    body: JSON.stringify({\r",
									"        \"username\": \"customer\" + pm.variables.replaceIn(\"{{$timestamp}}\"),\r",
									"        \"firstName\": \"John\",\r",
									"        \"lastName\": \"Smith\"\r",
									"    })\r",
									"}\r",
									"pm.sendRequest(options, function (err, response) {\r",
									"    pm.expect(err).to.be.null\r",
									"    pm.expect(response.code).to.equals(201)\r",
									"    pm.variables.set(\"createdCustomerId\", response.json().id)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/customers/{{createdCustomerId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"customers",
								"{{createdCustomerId}}"
							]
						},
						"description": "Completely remove a customer from the system. This will remove the customer and all associated accounts and transactions.\n\n⚠️ Use this service carefully! It will not pause for confirmation before performing the operation!\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The customer was successfully deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				}
			],
			"description": "Enroll and manage customers"
		},
		{
			"name": "Institutions",
			"item": [
				{
					"name": "Get Certified Institutions With RSSD",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/institution/v2/certifiedInstitutions/rssd?search=finbank&start=1&limit=25&type=voa",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"institution",
								"v2",
								"certifiedInstitutions",
								"rssd"
							],
							"query": [
								{
									"key": "search",
									"value": "finbank",
									"description": "Search term (financial institution `name` field). Leave empty for all FIs."
								},
								{
									"key": "start",
									"value": "1",
									"description": "Index of the page of results to return"
								},
								{
									"key": "limit",
									"value": "25",
									"description": "Maximum number of results per page"
								},
								{
									"key": "type",
									"value": "voa",
									"description": "A product type: \"transAgg\", \"ach\", \"stateAgg\", \"voi\", \"voa\", \"aha\", \"availBalance\", \"accountOwner\""
								}
							]
						},
						"description": "Search for certified financial institutions w/RSSD.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "Institutions were successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/institution/v2/certifiedInstitutions/rssd?search=finbank&start=1&limit=25&type=voa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"institution",
										"v2",
										"certifiedInstitutions",
										"rssd"
									],
									"query": [
										{
											"key": "search",
											"value": "finbank"
										},
										{
											"key": "start",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "type",
											"value": "voa"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/institution/v2/certifiedInstitutions/rssd?search=finbank&start=1&limit=25&type=voa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"institution",
										"v2",
										"certifiedInstitutions",
										"rssd"
									],
									"query": [
										{
											"key": "search",
											"value": "finbank"
										},
										{
											"key": "start",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "type",
											"value": "voa"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/institution/v2/certifiedInstitutions/rssd?search=finbank&start=1&limit=25&type=voa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"institution",
										"v2",
										"certifiedInstitutions",
										"rssd"
									],
									"query": [
										{
											"key": "search",
											"value": "finbank"
										},
										{
											"key": "start",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "type",
											"value": "voa"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						}
					]
				},
				{
					"name": "Get Institutions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/institution/v2/institutions?search=finbank&start=1&limit=25&type=voa",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"institution",
								"v2",
								"institutions"
							],
							"query": [
								{
									"key": "search",
									"value": "finbank",
									"description": "Search term (financial institution `name` field). Leave empty for all FIs."
								},
								{
									"key": "start",
									"value": "1",
									"description": "Index of the page of results to return"
								},
								{
									"key": "limit",
									"value": "25",
									"description": "Maximum number of results per page"
								},
								{
									"key": "type",
									"value": "voa",
									"description": "A product type: \"transAgg\", \"ach\", \"stateAgg\", \"voi\", \"voa\", \"aha\", \"availBalance\", \"accountOwner\""
								}
							]
						},
						"description": "Search for financial institutions.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "Institutions were successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/institution/v2/institutions?search=finbank&start=1&limit=25&type=voa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"institution",
										"v2",
										"institutions"
									],
									"query": [
										{
											"key": "search",
											"value": "finbank"
										},
										{
											"key": "start",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "type",
											"value": "voa"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/institution/v2/institutions?search=finbank&start=1&limit=25&type=voa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"institution",
										"v2",
										"institutions"
									],
									"query": [
										{
											"key": "search",
											"value": "finbank"
										},
										{
											"key": "start",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "type",
											"value": "voa"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/institution/v2/institutions?search=finbank&start=1&limit=25&type=voa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"institution",
										"v2",
										"institutions"
									],
									"query": [
										{
											"key": "search",
											"value": "finbank"
										},
										{
											"key": "start",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "type",
											"value": "voa"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						}
					]
				},
				{
					"name": "Get Certified Institutions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/institution/v2/certifiedInstitutions?search=finbank&start=1&limit=25&type=voa",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"institution",
								"v2",
								"certifiedInstitutions"
							],
							"query": [
								{
									"key": "search",
									"value": "finbank",
									"description": "Search term (financial institution `name` field). Leave empty for all FIs."
								},
								{
									"key": "start",
									"value": "1",
									"description": "Index of the page of results to return"
								},
								{
									"key": "limit",
									"value": "25",
									"description": "Maximum number of results per page"
								},
								{
									"key": "type",
									"value": "voa",
									"description": "A product type: \"transAgg\", \"ach\", \"stateAgg\", \"voi\", \"voa\", \"aha\", \"availBalance\", \"accountOwner\""
								}
							]
						},
						"description": "Search for financial institutions by certified product.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "Institutions were successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/institution/v2/certifiedInstitutions?search=finbank&start=1&limit=25&type=voa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"institution",
										"v2",
										"certifiedInstitutions"
									],
									"query": [
										{
											"key": "search",
											"value": "finbank"
										},
										{
											"key": "start",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "type",
											"value": "voa"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/institution/v2/certifiedInstitutions?search=finbank&start=1&limit=25&type=voa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"institution",
										"v2",
										"certifiedInstitutions"
									],
									"query": [
										{
											"key": "search",
											"value": "finbank"
										},
										{
											"key": "start",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "type",
											"value": "voa"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/institution/v2/certifiedInstitutions?search=finbank&start=1&limit=25&type=voa",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"institution",
										"v2",
										"certifiedInstitutions"
									],
									"query": [
										{
											"key": "search",
											"value": "finbank"
										},
										{
											"key": "start",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "type",
											"value": "voa"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						}
					]
				},
				{
					"name": "Get Institution by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/institution/v2/institutions/{{institutionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"institution",
								"v2",
								"institutions",
								"{{institutionId}}"
							]
						},
						"description": "Get financial institution details by ID.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "Institution was successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/institution/v2/institutions/:institutionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"institution",
										"v2",
										"institutions",
										":institutionId"
									],
									"variable": [
										{
											"key": "institutionId",
											"value": "4222",
											"description": "(Required) The institution ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/institution/v2/institutions/:institutionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"institution",
										"v2",
										"institutions",
										":institutionId"
									],
									"variable": [
										{
											"key": "institutionId",
											"value": "4222",
											"description": "(Required) The institution ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/institution/v2/institutions/:institutionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"institution",
										"v2",
										"institutions",
										":institutionId"
									],
									"variable": [
										{
											"key": "institutionId",
											"value": "4222",
											"description": "(Required) The institution ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/institution/v2/institutions/:institutionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"institution",
										"v2",
										"institutions",
										":institutionId"
									],
									"variable": [
										{
											"key": "institutionId",
											"value": "4222",
											"description": "(Required) The institution ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Get Institution Branding by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/institution/v2/institutions/{{institutionId}}/branding",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"institution",
								"v2",
								"institutions",
								"{{institutionId}}",
								"branding"
							]
						},
						"description": "Return the branding information for a financial institution.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "Institution branding was successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/institution/v2/institutions/:institutionId/branding",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"institution",
										"v2",
										"institutions",
										":institutionId",
										"branding"
									],
									"variable": [
										{
											"key": "institutionId",
											"value": "4222",
											"description": "(Required) The institution ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/institution/v2/institutions/:institutionId/branding",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"institution",
										"v2",
										"institutions",
										":institutionId",
										"branding"
									],
									"variable": [
										{
											"key": "institutionId",
											"value": "4222",
											"description": "(Required) The institution ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/institution/v2/institutions/:institutionId/branding",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"institution",
										"v2",
										"institutions",
										":institutionId",
										"branding"
									],
									"variable": [
										{
											"key": "institutionId",
											"value": "4222",
											"description": "(Required) The institution ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/institution/v2/institutions/:institutionId/branding",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"institution",
										"v2",
										"institutions",
										":institutionId",
										"branding"
									],
									"variable": [
										{
											"key": "institutionId",
											"value": "4222",
											"description": "(Required) The institution ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				}
			],
			"description": "Search and fetch financial institutions",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const baseUrl = pm.collectionVariables.get(\"baseUrl\")",
							"const appKey = pm.environment.get(\"appKey\")",
							"const customerId = pm.environment.get(\"customerId\")",
							"const appToken = pm.globals.get(\"appToken\")",
							"pm.variables.set(\"institutionId\", \"4222\") // Principal Financial - Retirement (Personal)"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Pay Statements",
			"item": [
				{
					"name": "Store Customer Pay Statement",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"label\": \"lastPayPeriod\",\n    \"statement\": \"VGhpcyBtdXN0IGJlIGFuIGltYWdl\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/customers/{{customerId}}/payStatements",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"customers",
								"{{customerId}}",
								"payStatements"
							]
						},
						"description": "Use this service to upload pay statements for a customer.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The pay statement was successfully uploaded",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/payStatements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"payStatements"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/payStatements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"payStatements"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/payStatements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"payStatements"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/payStatements",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"payStatements"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				}
			],
			"description": "Upload pay statements"
		},
		{
			"name": "Payments",
			"item": [
				{
					"name": "Get Account Owner",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/customers/{{customerId}}/accounts/{{accountId}}/owner",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"customers",
								"{{customerId}}",
								"accounts",
								"{{accountId}}",
								"owner"
							]
						},
						"description": "Retrieve the names and addresses of the account owner from a financial institution.\n\nNote: this is a premium service, billable per every successful API call.\n\nThis service retrieves account data from the institution. This usually returns quickly, but in some scenarios may take a few minutes to complete. In the event of a timeout condition, retry the call.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The account owner was successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"owner"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The response contains an MFA challenge in XML or JSON format. Contact your Account Manager or Systems Engineers to determine the best route to handle this error.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"owner"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Non-Authoritative Information (since HTTP/1.1)",
							"code": 203,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"owner"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"owner"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/owner",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"owner"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Get Loan Payment Details",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const baseUrl = pm.collectionVariables.get(\"baseUrl\")\r",
									"const appKey = pm.environment.get(\"appKey\")\r",
									"const customerId = pm.environment.get(\"customerId\")\r",
									"const appToken = pm.globals.get(\"appToken\")\r",
									"\r",
									"const loanAccountId = pm.variables.get(\"loanAccountId\")\r",
									"if (loanAccountId) {\r",
									"    return\r",
									"}\r",
									"\r",
									"console.log(\"Fetching account ID ...\")\r",
									"const options = {\r",
									"    url:  baseUrl + \"/aggregation/v1/customers/\"+ customerId + \"/accounts\",\r",
									"    method: 'GET',\r",
									"    header: {\r",
									"        \"Accept\": \"application/json\",\r",
									"        \"Finicity-App-Key\": appKey,\r",
									"        \"Finicity-App-Token\": appToken\r",
									"    }\r",
									"}\r",
									"pm.sendRequest(options, function (err, response) {\r",
									"    pm.expect(err).to.be.null\r",
									"    pm.expect(response.code).to.equals(200)\r",
									"    const account = response.json().accounts[0]\r",
									"    pm.variables.set(\"loanAccountId\", account.id)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aggregation/v2/customers/{{customerId}}/accounts/{{loanAccountId}}/loanDetails",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v2",
								"customers",
								"{{customerId}}",
								"accounts",
								"{{loanAccountId}}",
								"loanDetails"
							]
						},
						"description": "Return the loan payment details of the customer for a loan-type account.\n\nNote: this is a premium service, billable per every successful API call.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The loan payment details were successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/customers/:customerId/accounts/:accountId/loanDetails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"loanDetails"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/customers/:customerId/accounts/:accountId/loanDetails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"loanDetails"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/customers/:customerId/accounts/:accountId/loanDetails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"loanDetails"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/customers/:customerId/accounts/:accountId/loanDetails",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"loanDetails"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Get Account ACH Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/customers/{{customerId}}/accounts/{{savingAccountId}}/details",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"customers",
								"{{customerId}}",
								"accounts",
								"{{savingAccountId}}",
								"details"
							]
						},
						"description": "Return the real account number and routing number details for an ACH payment.\n\nNote: this is a premium service, billable per every successful API call.\n\n_Supported account types_: \"checking\", \"savings\", \"moneyMarket\", \"loan\"\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "Account ACH details were successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/details",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"details"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/details",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"details"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/details",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"details"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/details",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"details"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Get Available Balance - Live",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/customers/{{customerId}}/accounts/{{savingAccountId}}/availableBalance/live",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"customers",
								"{{customerId}}",
								"accounts",
								"{{savingAccountId}}",
								"availableBalance",
								"live"
							]
						},
						"description": "Retrieve the available and cleared account balances for a single account in real-time directly from a financial institution.\n\nNote: this is a premium service, billable per every successful API call.\n\n_Supported account types_: \"checking\", \"savings\", \"moneyMarket\", \"cd\"\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The live balance was successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/availableBalance/live",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"availableBalance",
										"live"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/availableBalance/live",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"availableBalance",
										"live"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/availableBalance/live",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"availableBalance",
										"live"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/availableBalance/live",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"availableBalance",
										"live"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Get Available Balance",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/customers/{{customerId}}/accounts/{{savingAccountId}}/availableBalance",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"customers",
								"{{customerId}}",
								"accounts",
								"{{savingAccountId}}",
								"availableBalance"
							]
						},
						"description": "Retrieve the latest cached available and cleared account balances for a customer. Since we update and store balances throughout the day, this is the most accurate balance information available when a connection to a financial institution is unavailable or when a faster response is needed. Only deposit account types are supported: Checking, Savings, Money Market, and CD.\n\nNote: this is a premium service, billable per every successful API call. Enrollment is required.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The balance was successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/availableBalance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"availableBalance"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/availableBalance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"availableBalance"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/availableBalance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"availableBalance"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/availableBalance",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"availableBalance"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				}
			],
			"description": "Fetch ACH details and account balances",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const baseUrl = pm.collectionVariables.get(\"baseUrl\")",
							"const appKey = pm.environment.get(\"appKey\")",
							"const customerId = pm.environment.get(\"customerId\")",
							"const appToken = pm.globals.get(\"appToken\")",
							"",
							"const savingAccountId = pm.variables.get(\"savingAccountId\")",
							"if (savingAccountId) {",
							"    return",
							"}",
							"",
							"console.log(\"Fetching 'savings' account ID\")",
							"const options = {",
							"    url:  baseUrl + \"/aggregation/v1/customers/\"+ customerId + \"/accounts\",",
							"    method: 'GET',",
							"    header: {",
							"        \"Accept\": \"application/json\",",
							"        \"Finicity-App-Key\": appKey,",
							"        \"Finicity-App-Token\": appToken",
							"    }",
							"}",
							"pm.sendRequest(options, function (err, response) {",
							"    pm.expect(err).to.be.null",
							"    pm.expect(response.code).to.equals(200)",
							"    const account = response.json().accounts.filter(a => a.type === \"savings\")[0]",
							"    pm.variables.set(\"savingAccountId\", account.id)",
							"})"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Portfolios",
			"item": [
				{
					"name": "Get Portfolio by Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    // HTTP 404: report not yet ready\r",
									"    pm.expect([200, 404]).contain(pm.response.code)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/decisioning/v1/customers/{{customerId}}/portfolios/{{portfolioId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decisioning",
								"v1",
								"customers",
								"{{customerId}}",
								"portfolios",
								"{{portfolioId}}"
							]
						},
						"description": "Return a portfolio of most recently generated reports for each report type for the given customer. If there are multiple reports that were generated for a report type (VOA, VOI, etc.), only the most recently generated report for the type will be returned.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The portfolio was successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/customers/:customerId/portfolios/:portfolioId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"customers",
										":customerId",
										"portfolios",
										":portfolioId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "portfolioId",
											"value": "y4zsgccj4xpw-6-port",
											"description": "(Required) A portfolio ID with the portfolio version number. Using the portfolio number without a version number will return the most recently generated reports."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/customers/:customerId/portfolios/:portfolioId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"customers",
										":customerId",
										"portfolios",
										":portfolioId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "portfolioId",
											"value": "y4zsgccj4xpw-6-port",
											"description": "(Required) A portfolio ID with the portfolio version number. Using the portfolio number without a version number will return the most recently generated reports."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/customers/:customerId/portfolios/:portfolioId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"customers",
										":customerId",
										"portfolios",
										":portfolioId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "portfolioId",
											"value": "y4zsgccj4xpw-6-port",
											"description": "(Required) A portfolio ID with the portfolio version number. Using the portfolio number without a version number will return the most recently generated reports."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/customers/:customerId/portfolios/:portfolioId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"customers",
										":customerId",
										"portfolios",
										":portfolioId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "portfolioId",
											"value": "y4zsgccj4xpw-6-port",
											"description": "(Required) A portfolio ID with the portfolio version number. Using the portfolio number without a version number will return the most recently generated reports."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Get Portfolio by Consumer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    // HTTP 404: report not yet ready\r",
									"    pm.expect([200, 404]).contain(pm.response.code)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/decisioning/v1/consumers/{{consumerId}}/portfolios/{{portfolioId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decisioning",
								"v1",
								"consumers",
								"{{consumerId}}",
								"portfolios",
								"{{portfolioId}}"
							]
						},
						"description": "Return a portfolio of most recently generated reports for each report type for a given consumer. If there are multiple reports that were generated for a report type (VOA, VOI, etc.), only the most recently generated report for the type will be returned.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The portfolio was successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/consumers/:consumerId/portfolios/:portfolioId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"consumers",
										":consumerId",
										"portfolios",
										":portfolioId"
									],
									"variable": [
										{
											"key": "consumerId",
											"value": "0bf46322c167b562e6cbed9d40e19a4c",
											"description": "(Required) The consumer ID"
										},
										{
											"key": "portfolioId",
											"value": "y4zsgccj4xpw-6-port",
											"description": "(Required) A portfolio ID with the portfolio version number. Using the portfolio number without a version number will return the most recently generated reports."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/consumers/:consumerId/portfolios/:portfolioId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"consumers",
										":consumerId",
										"portfolios",
										":portfolioId"
									],
									"variable": [
										{
											"key": "consumerId",
											"value": "0bf46322c167b562e6cbed9d40e19a4c",
											"description": "(Required) The consumer ID"
										},
										{
											"key": "portfolioId",
											"value": "y4zsgccj4xpw-6-port",
											"description": "(Required) A portfolio ID with the portfolio version number. Using the portfolio number without a version number will return the most recently generated reports."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/consumers/:consumerId/portfolios/:portfolioId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"consumers",
										":consumerId",
										"portfolios",
										":portfolioId"
									],
									"variable": [
										{
											"key": "consumerId",
											"value": "0bf46322c167b562e6cbed9d40e19a4c",
											"description": "(Required) The consumer ID"
										},
										{
											"key": "portfolioId",
											"value": "y4zsgccj4xpw-6-port",
											"description": "(Required) A portfolio ID with the portfolio version number. Using the portfolio number without a version number will return the most recently generated reports."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/consumers/:consumerId/portfolios/:portfolioId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"consumers",
										":consumerId",
										"portfolios",
										":portfolioId"
									],
									"variable": [
										{
											"key": "consumerId",
											"value": "0bf46322c167b562e6cbed9d40e19a4c",
											"description": "(Required) The consumer ID"
										},
										{
											"key": "portfolioId",
											"value": "y4zsgccj4xpw-6-port",
											"description": "(Required) A portfolio ID with the portfolio version number. Using the portfolio number without a version number will return the most recently generated reports."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				}
			],
			"description": "Generate portfolios of the most recent reports",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const baseUrl = pm.collectionVariables.get(\"baseUrl\")",
							"const appKey = pm.environment.get(\"appKey\")",
							"const customerId = pm.environment.get(\"customerId\")",
							"const appToken = pm.globals.get(\"appToken\")",
							"",
							"const portfolioId = pm.variables.get(\"portfolioId\")",
							"const consumerId = pm.variables.get(\"consumerId\")",
							"if (portfolioId && consumerId) {",
							"    return",
							"}",
							"",
							"console.log(\"Fetching portfolio ID and consumer ID ...\")",
							"const options = {",
							"    url:  baseUrl + \"/decisioning/v2/customers/\" + customerId + \"/voa\",",
							"    method: 'POST',",
							"    header: {",
							"        \"Accept\": \"application/json\",",
							"        \"Content-Type\": \"application/json\",",
							"        \"Finicity-App-Key\": appKey,",
							"        \"Finicity-App-Token\": appToken",
							"    },",
							"    body: JSON.stringify({})",
							"}",
							"pm.sendRequest(options, function (err, response) {",
							"    pm.expect(err).to.be.null",
							"    pm.expect(response.code).to.equals(202)",
							"    pm.variables.set(\"portfolioId\", response.json().portfolioId)",
							"    pm.variables.set(\"consumerId\", response.json().consumerId)",
							"})"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Reports",
			"item": [
				{
					"name": "Get Report by Customer and ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 429])\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/decisioning/v3/customers/{{customerId}}/reports/{{reportId}}?onBehalfOf=Some entity&purpose=99",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decisioning",
								"v3",
								"customers",
								"{{customerId}}",
								"reports",
								"{{reportId}}"
							],
							"query": [
								{
									"key": "onBehalfOf",
									"value": "Some entity",
									"description": "(Required) The name of the entity you are retrieving the report on behalf of"
								},
								{
									"key": "purpose",
									"value": "99",
									"description": "2-digit code from [Permissible Purpose Codes](https://docs.finicity.com/permissible-purpose-codes/), specifying the reason for retrieving this report. Required for retrieving some reports."
								}
							]
						},
						"description": "Get a report that has been generated by a previous call to one of the Generate Report services.\n\nThe report's `status` field contains \"inProgress\", \"failure\", or \"success\". If the status shows \"inProgress\", the client app should wait 20 seconds and then call this API again.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The report was successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v3/customers/:customerId/reports/:reportId?onBehalfOf=Some entity&purpose=99",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v3",
										"customers",
										":customerId",
										"reports",
										":reportId"
									],
									"query": [
										{
											"key": "onBehalfOf",
											"value": "Some entity"
										},
										{
											"key": "purpose",
											"value": "99"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "reportId",
											"value": "u4hstnnak45g",
											"description": "(Required) ID of the report"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v3/customers/:customerId/reports/:reportId?onBehalfOf=Some entity&purpose=99",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v3",
										"customers",
										":customerId",
										"reports",
										":reportId"
									],
									"query": [
										{
											"key": "onBehalfOf",
											"value": "Some entity"
										},
										{
											"key": "purpose",
											"value": "99"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "reportId",
											"value": "u4hstnnak45g",
											"description": "(Required) ID of the report"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v3/customers/:customerId/reports/:reportId?onBehalfOf=Some entity&purpose=99",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v3",
										"customers",
										":customerId",
										"reports",
										":reportId"
									],
									"query": [
										{
											"key": "onBehalfOf",
											"value": "Some entity"
										},
										{
											"key": "purpose",
											"value": "99"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "reportId",
											"value": "u4hstnnak45g",
											"description": "(Required) ID of the report"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v3/customers/:customerId/reports/:reportId?onBehalfOf=Some entity&purpose=99",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v3",
										"customers",
										":customerId",
										"reports",
										":reportId"
									],
									"query": [
										{
											"key": "onBehalfOf",
											"value": "Some entity"
										},
										{
											"key": "purpose",
											"value": "99"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "reportId",
											"value": "u4hstnnak45g",
											"description": "(Required) ID of the report"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Get Report by Consumer and ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 429])\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/decisioning/v3/consumers/{{consumerId}}/reports/{{reportId}}?purpose=99&onBehalfOf=Some entity",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decisioning",
								"v3",
								"consumers",
								"{{consumerId}}",
								"reports",
								"{{reportId}}"
							],
							"query": [
								{
									"key": "purpose",
									"value": "99",
									"description": "2-digit code from [Permissible Purpose Codes](https://docs.finicity.com/permissible-purpose-codes/), specifying the reason for retrieving this report. Required for retrieving some reports."
								},
								{
									"key": "onBehalfOf",
									"value": "Some entity",
									"description": "(Required) The name of the entity you are retrieving the report on behalf of"
								}
							]
						},
						"description": "Get a report that has been generated by a previous call to one of the Generate Report services.\n\nThe report's `status` field contains \"inProgress\", \"failure\", or \"success\". If the status shows \"inProgress\", the client app should wait 20 seconds and then call this API again.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The report was successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v3/consumers/:consumerId/reports/:reportId?purpose=99&onBehalfOf=Some entity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v3",
										"consumers",
										":consumerId",
										"reports",
										":reportId"
									],
									"query": [
										{
											"key": "purpose",
											"value": "99"
										},
										{
											"key": "onBehalfOf",
											"value": "Some entity"
										}
									],
									"variable": [
										{
											"key": "consumerId",
											"value": "0bf46322c167b562e6cbed9d40e19a4c",
											"description": "(Required) The consumer ID"
										},
										{
											"key": "reportId",
											"value": "u4hstnnak45g",
											"description": "(Required) ID of the report"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v3/consumers/:consumerId/reports/:reportId?purpose=99&onBehalfOf=Some entity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v3",
										"consumers",
										":consumerId",
										"reports",
										":reportId"
									],
									"query": [
										{
											"key": "purpose",
											"value": "99"
										},
										{
											"key": "onBehalfOf",
											"value": "Some entity"
										}
									],
									"variable": [
										{
											"key": "consumerId",
											"value": "0bf46322c167b562e6cbed9d40e19a4c",
											"description": "(Required) The consumer ID"
										},
										{
											"key": "reportId",
											"value": "u4hstnnak45g",
											"description": "(Required) ID of the report"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v3/consumers/:consumerId/reports/:reportId?purpose=99&onBehalfOf=Some entity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v3",
										"consumers",
										":consumerId",
										"reports",
										":reportId"
									],
									"query": [
										{
											"key": "purpose",
											"value": "99"
										},
										{
											"key": "onBehalfOf",
											"value": "Some entity"
										}
									],
									"variable": [
										{
											"key": "consumerId",
											"value": "0bf46322c167b562e6cbed9d40e19a4c",
											"description": "(Required) The consumer ID"
										},
										{
											"key": "reportId",
											"value": "u4hstnnak45g",
											"description": "(Required) ID of the report"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v3/consumers/:consumerId/reports/:reportId?purpose=99&onBehalfOf=Some entity",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v3",
										"consumers",
										":consumerId",
										"reports",
										":reportId"
									],
									"query": [
										{
											"key": "purpose",
											"value": "99"
										},
										{
											"key": "onBehalfOf",
											"value": "Some entity"
										}
									],
									"variable": [
										{
											"key": "consumerId",
											"value": "0bf46322c167b562e6cbed9d40e19a4c",
											"description": "(Required) The consumer ID"
										},
										{
											"key": "reportId",
											"value": "u4hstnnak45g",
											"description": "(Required) ID of the report"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Get Reports by Customer ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 429])\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/decisioning/v1/customers/{{customerId}}/reports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decisioning",
								"v1",
								"customers",
								"{{customerId}}",
								"reports"
							],
							"query": [
								{
									"key": "purpose",
									"value": "99",
									"description": "2-digit code from [Permissible Purpose Codes](https://docs.finicity.com/permissible-purpose-codes/), specifying the reason for retrieving this report. Required for retrieving some reports.",
									"disabled": true
								}
							]
						},
						"description": "Get all reports that have been generated by previous calls to Generate Report services for the given customer.\n\nThe `status` fields in the returned contain \"inProgress\", \"failure\", or \"success\". If the status shows \"inProgress\", the client app should wait 20 seconds and then call this API again.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The reports summaries were successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/customers/:customerId/reports?purpose=99",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"customers",
										":customerId",
										"reports"
									],
									"query": [
										{
											"key": "purpose",
											"value": "99"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/customers/:customerId/reports?purpose=99",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"customers",
										":customerId",
										"reports"
									],
									"query": [
										{
											"key": "purpose",
											"value": "99"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/customers/:customerId/reports?purpose=99",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"customers",
										":customerId",
										"reports"
									],
									"query": [
										{
											"key": "purpose",
											"value": "99"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/customers/:customerId/reports?purpose=99",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"customers",
										":customerId",
										"reports"
									],
									"query": [
										{
											"key": "purpose",
											"value": "99"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						},
						{
							"name": "The service can't accept more requests or is not available from the [Test Drive](https://signup.finicity.com/).",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/customers/:customerId/reports?purpose=99",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"customers",
										":customerId",
										"reports"
									],
									"query": [
										{
											"key": "purpose",
											"value": "99"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Reports by Consumer ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 429])\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/decisioning/v1/consumers/{{consumerId}}/reports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decisioning",
								"v1",
								"consumers",
								"{{consumerId}}",
								"reports"
							],
							"query": [
								{
									"key": "purpose",
									"value": "99",
									"description": "2-digit code from [Permissible Purpose Codes](https://docs.finicity.com/permissible-purpose-codes/), specifying the reason for retrieving this report. Required for retrieving some reports.",
									"disabled": true
								}
							]
						},
						"description": "Get all reports that have been generated by previous calls to Generate Report services for the given consumer.\n\nThe `status` fields in the returned contain \"inProgress\", \"failure\", or \"success\". If the status shows \"inProgress\", the client app should wait 20 seconds and then call this API again.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The reports summaries were successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/consumers/:consumerId/reports?purpose=99",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"consumers",
										":consumerId",
										"reports"
									],
									"query": [
										{
											"key": "purpose",
											"value": "99"
										}
									],
									"variable": [
										{
											"key": "consumerId",
											"value": "0bf46322c167b562e6cbed9d40e19a4c",
											"description": "(Required) The consumer ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/consumers/:consumerId/reports?purpose=99",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"consumers",
										":consumerId",
										"reports"
									],
									"query": [
										{
											"key": "purpose",
											"value": "99"
										}
									],
									"variable": [
										{
											"key": "consumerId",
											"value": "0bf46322c167b562e6cbed9d40e19a4c",
											"description": "(Required) The consumer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/consumers/:consumerId/reports?purpose=99",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"consumers",
										":consumerId",
										"reports"
									],
									"query": [
										{
											"key": "purpose",
											"value": "99"
										}
									],
									"variable": [
										{
											"key": "consumerId",
											"value": "0bf46322c167b562e6cbed9d40e19a4c",
											"description": "(Required) The consumer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/consumers/:consumerId/reports?purpose=99",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"consumers",
										":consumerId",
										"reports"
									],
									"query": [
										{
											"key": "purpose",
											"value": "99"
										}
									],
									"variable": [
										{
											"key": "consumerId",
											"value": "0bf46322c167b562e6cbed9d40e19a4c",
											"description": "(Required) The consumer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						},
						{
							"name": "The service can't accept more requests or is not available from the [Test Drive](https://signup.finicity.com/).",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v1/consumers/:consumerId/reports?purpose=99",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v1",
										"consumers",
										":consumerId",
										"reports"
									],
									"query": [
										{
											"key": "purpose",
											"value": "99"
										}
									],
									"variable": [
										{
											"key": "consumerId",
											"value": "0bf46322c167b562e6cbed9d40e19a4c",
											"description": "(Required) The consumer ID"
										}
									]
								}
							},
							"status": "Too Many Requests",
							"code": 429,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "Fetch generated reports when ready",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const baseUrl = pm.collectionVariables.get(\"baseUrl\")",
							"const appKey = pm.environment.get(\"appKey\")",
							"const customerId = pm.environment.get(\"customerId\")",
							"const appToken = pm.globals.get(\"appToken\")",
							"const accountId = pm.variables.get(\"accountId\")",
							"",
							"const reportId = pm.variables.get(\"reportId\")",
							"const consumerId = pm.variables.get(\"consumerId\")",
							"if (reportId && consumerId) {",
							"    return",
							"}",
							"",
							"console.log(\"Fetching report ID and consumer ID ...\")",
							"const options = {",
							"    url:  baseUrl + \"/decisioning/v2/customers/\" + customerId + \"/voa\",",
							"    method: 'POST',",
							"    header: {",
							"        \"Accept\": \"application/json\",",
							"        \"Content-Type\": \"application/json\",",
							"        \"Finicity-App-Key\": appKey,",
							"        \"Finicity-App-Token\": appToken",
							"    },",
							"    body: JSON.stringify({})",
							"}",
							"pm.sendRequest(options, function (err, response) {",
							"    pm.expect(err).to.be.null",
							"    pm.expect(response.code).to.equals(202)",
							"    pm.variables.set(\"reportId\", response.json().id)",
							"    pm.variables.set(\"consumerId\", response.json().consumerId)",
							"})"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Transactions",
			"item": [
				{
					"name": "Load Historic Transactions for Customer Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(204)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/customers/{{customerId}}/accounts/{{accountId}}/transactions/historic",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"customers",
								"{{customerId}}",
								"accounts",
								"{{accountId}}",
								"transactions",
								"historic"
							]
						},
						"description": "Connect to the account's financial institution and load up to 24 months of historic transactions for the account. Length of history varies by institution.\n\nThis is a premium service. The billable event is a call to this service specifying a customer ID that has not been seen before by this service. (If this service is called multiple times with the same customer ID, to load transactions from multiple accounts, only one billable event has occurred.)\n\nThe recommended timeout setting for this request is 180 seconds in order to receive a response. However, you can terminate the connection after making the call the operation will still complete. You will have to pull the account records to check for an updated aggregation attempt date to know when the refresh is complete.\n\nThe date range sent to the institution is calculated from the account's `createdDate`. This means that calling this service a second time for the same account normally will not add any new transactions for the account. For this reason, a second call to this service for a known account ID will usually return immediately.\n\nIn a few specific scenarios, it may be desirable to force a second connection to the institution for a known account ID. Some examples are:\n\n* The institution's policy has changed, making more transactions available\n* Finicity has now added a longer transaction history support for the institution\n* The first call encountered an error, and the resulting Aggregation Ticket has now been fixed by the Finicity Support Team\n\nIn these cases, the POST request can contain the parameter `force=true` in the request body to force the second connection.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The response contains an MFA challenge in XML or JSON format. Contact your Account Manager or Systems Engineers to determine the best route to handle this error.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/transactions/historic",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"transactions",
										"historic"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Non-Authoritative Information (since HTTP/1.1)",
							"code": 203,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Historic transactions have been loaded successfully. The transactions are now available by calling the Get Customer Account Transactions API.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/transactions/historic",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"transactions",
										"historic"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/transactions/historic",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"transactions",
										"historic"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/transactions/historic",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"transactions",
										"historic"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/transactions/historic",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"transactions",
										"historic"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Get All Customer Transactions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aggregation/v3/customers/{{customerId}}/transactions?fromDate=1000000000&includePending=true&toDate=1665309262",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v3",
								"customers",
								"{{customerId}}",
								"transactions"
							],
							"query": [
								{
									"key": "fromDate",
									"value": "1000000000",
									"description": "(Required) A start date"
								},
								{
									"key": "start",
									"value": "1",
									"description": "Index of the page of results to return",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "25",
									"description": "Maximum number of results per page",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "desc",
									"description": "Date sort order: \"asc\" for ascending, \"desc\" for descending",
									"disabled": true
								},
								{
									"key": "includePending",
									"value": "true",
									"description": "If pending transactions must be included"
								},
								{
									"key": "toDate",
									"value": "1665309262",
									"description": "(Required) A end date"
								}
							]
						},
						"description": "Get all transactions available for this customer within the given date range, across all accounts. This service supports paging and sorting by `transactionDate` (or `postedDate` if no transaction date is provided), with a maximum of 1000 transactions per request.\n\nStandard consumer aggregation provides up to 180 days of transactions prior to the date each account was added to the Finicity system. To access older transactions, you must first call the service Load Historic Transactions for Account.\n\nThere is no limit for the size of the window between `fromDate` and `toDate`, however, the maximum number of transactions returned on one page is 1000.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The transactions were successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v3/customers/:customerId/transactions?fromDate=1607450357&toDate=1607450357&start=1&limit=25&sort=desc&includePending=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v3",
										"customers",
										":customerId",
										"transactions"
									],
									"query": [
										{
											"key": "fromDate",
											"value": "1607450357"
										},
										{
											"key": "toDate",
											"value": "1607450357"
										},
										{
											"key": "start",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "sort",
											"value": "desc"
										},
										{
											"key": "includePending",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v3/customers/:customerId/transactions?fromDate=1607450357&toDate=1607450357&start=1&limit=25&sort=desc&includePending=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v3",
										"customers",
										":customerId",
										"transactions"
									],
									"query": [
										{
											"key": "fromDate",
											"value": "1607450357"
										},
										{
											"key": "toDate",
											"value": "1607450357"
										},
										{
											"key": "start",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "sort",
											"value": "desc"
										},
										{
											"key": "includePending",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v3/customers/:customerId/transactions?fromDate=1607450357&toDate=1607450357&start=1&limit=25&sort=desc&includePending=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v3",
										"customers",
										":customerId",
										"transactions"
									],
									"query": [
										{
											"key": "fromDate",
											"value": "1607450357"
										},
										{
											"key": "toDate",
											"value": "1607450357"
										},
										{
											"key": "start",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "sort",
											"value": "desc"
										},
										{
											"key": "includePending",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v3/customers/:customerId/transactions?fromDate=1607450357&toDate=1607450357&start=1&limit=25&sort=desc&includePending=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v3",
										"customers",
										":customerId",
										"transactions"
									],
									"query": [
										{
											"key": "fromDate",
											"value": "1607450357"
										},
										{
											"key": "toDate",
											"value": "1607450357"
										},
										{
											"key": "start",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "sort",
											"value": "desc"
										},
										{
											"key": "includePending",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Get Customer Transaction by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(404)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aggregation/v2/customers/{{customerId}}/transactions/:transactionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v2",
								"customers",
								"{{customerId}}",
								"transactions",
								":transactionId"
							],
							"variable": [
								{
									"key": "transactionId",
									"value": "1234",
									"description": "(Required) A transaction ID"
								}
							]
						},
						"description": "Get details for the given transaction.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The transaction was successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/customers/:customerId/transactions/:transactionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"customers",
										":customerId",
										"transactions",
										":transactionId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "transactionId",
											"value": "21284820852",
											"description": "(Required) A transaction ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/customers/:customerId/transactions/:transactionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"customers",
										":customerId",
										"transactions",
										":transactionId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "transactionId",
											"value": "21284820852",
											"description": "(Required) A transaction ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/customers/:customerId/transactions/:transactionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"customers",
										":customerId",
										"transactions",
										":transactionId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "transactionId",
											"value": "21284820852",
											"description": "(Required) A transaction ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v2/customers/:customerId/transactions/:transactionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v2",
										"customers",
										":customerId",
										"transactions",
										":transactionId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "transactionId",
											"value": "21284820852",
											"description": "(Required) A transaction ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Get Customer Account Transactions",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const baseUrl = pm.collectionVariables.get(\"baseUrl\")\r",
									"const appKey = pm.environment.get(\"appKey\")\r",
									"const customerId = pm.environment.get(\"customerId\")\r",
									"const appToken = pm.globals.get(\"appToken\")\r",
									"\r",
									"const accountId = pm.variables.get(\"accountId\")\r",
									"if (accountId) {\r",
									"    return\r",
									"}\r",
									"\r",
									"console.log(\"Fetching account ID ...\")\r",
									"const options = {\r",
									"    url:  baseUrl + \"/aggregation/v1/customers/\"+ customerId + \"/accounts\",\r",
									"    method: 'GET',\r",
									"    header: {\r",
									"        \"Accept\": \"application/json\",\r",
									"        \"Finicity-App-Key\": appKey,\r",
									"        \"Finicity-App-Token\": appToken\r",
									"    }\r",
									"}\r",
									"pm.sendRequest(options, function (err, response) {\r",
									"    pm.expect(err).to.be.null\r",
									"    pm.expect(response.code).to.equals(200)\r",
									"    pm.variables.set(\"accountId\", response.json().accounts[0].id)\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aggregation/v4/customers/{{customerId}}/accounts/{{accountId}}/transactions?fromDate=1000000000&includePending=true&toDate=1665309262",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v4",
								"customers",
								"{{customerId}}",
								"accounts",
								"{{accountId}}",
								"transactions"
							],
							"query": [
								{
									"key": "fromDate",
									"value": "1000000000",
									"description": "(Required) A start date"
								},
								{
									"key": "start",
									"value": "1",
									"description": "Index of the page of results to return",
									"disabled": true
								},
								{
									"key": "limit",
									"value": "25",
									"description": "Maximum number of results per page",
									"disabled": true
								},
								{
									"key": "sort",
									"value": "desc",
									"description": "Date sort order: \"asc\" for ascending, \"desc\" for descending",
									"disabled": true
								},
								{
									"key": "includePending",
									"value": "true",
									"description": "If pending transactions must be included"
								},
								{
									"key": "toDate",
									"value": "1665309262",
									"description": "(Required) A end date"
								}
							]
						},
						"description": "Get all transactions available for this customer account within the given date range. This service supports paging and sorting by `transactionDate` (or `postedDate` if no transaction date is provided), with a maximum of 1000 transactions per request.\n\nStandard consumer aggregation provides up to 180 days of transactions prior to the date each account was added to the Finicity system. To access older transactions, you must first call the Cash Flow Verification service Load Historic Transactions for Account.\n\nThere is no limit for the size of the window between `fromDate` and `toDate`, however, the maximum number of transactions returned on one page is 1000.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The transactions were successfully retrieved",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v3/customers/:customerId/accounts/:accountId/transactions?fromDate=1607450357&toDate=1607450357&start=1&limit=25&sort=desc&includePending=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v3",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"transactions"
									],
									"query": [
										{
											"key": "fromDate",
											"value": "1607450357"
										},
										{
											"key": "toDate",
											"value": "1607450357"
										},
										{
											"key": "start",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "sort",
											"value": "desc"
										},
										{
											"key": "includePending",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v3/customers/:customerId/accounts/:accountId/transactions?fromDate=1607450357&toDate=1607450357&start=1&limit=25&sort=desc&includePending=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v3",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"transactions"
									],
									"query": [
										{
											"key": "fromDate",
											"value": "1607450357"
										},
										{
											"key": "toDate",
											"value": "1607450357"
										},
										{
											"key": "start",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "sort",
											"value": "desc"
										},
										{
											"key": "includePending",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v3/customers/:customerId/accounts/:accountId/transactions?fromDate=1607450357&toDate=1607450357&start=1&limit=25&sort=desc&includePending=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v3",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"transactions"
									],
									"query": [
										{
											"key": "fromDate",
											"value": "1607450357"
										},
										{
											"key": "toDate",
											"value": "1607450357"
										},
										{
											"key": "start",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "sort",
											"value": "desc"
										},
										{
											"key": "includePending",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v3/customers/:customerId/accounts/:accountId/transactions?fromDate=1607450357&toDate=1607450357&start=1&limit=25&sort=desc&includePending=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v3",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"transactions"
									],
									"query": [
										{
											"key": "fromDate",
											"value": "1607450357"
										},
										{
											"key": "toDate",
											"value": "1607450357"
										},
										{
											"key": "start",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "25"
										},
										{
											"key": "sort",
											"value": "desc"
										},
										{
											"key": "includePending",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Generate Transactions Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([202, 429, 401])\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reportCustomFields\": [\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        },\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        }\n    ],\n    \"showNsf\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/decisioning/v2/customers/{{customerId}}/transactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decisioning",
								"v2",
								"customers",
								"{{customerId}}",
								"transactions"
							],
							"query": [
								{
									"key": "callbackUrl",
									"value": "https://finicity-test/webhook",
									"description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.",
									"disabled": true
								},
								{
									"key": "toDate",
									"value": "1607450357",
									"description": "(Required) A end date",
									"disabled": true
								},
								{
									"key": "includePending",
									"value": "true",
									"description": "If pending transactions must be included",
									"disabled": true
								}
							]
						},
						"description": "Generate a Transaction Report for the given accounts under the given customer. This service retrieves up to 24 months of transaction history for the given customer. It then uses this information to generate the Transaction Report. \n\nThis is a premium service. A billable event will be created upon the successful generation of the Transactions Report. \n\nBefore calling this API, a consumer must be created for the given customer ID (see Consumers APIs).\n\nThere cannot be more than 24 months between `fromDate` and `toDate`.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/transactions?callbackUrl=https://finicity-test/webhook&toDate=1607450357&includePending=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"transactions"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										},
										{
											"key": "toDate",
											"value": "1607450357"
										},
										{
											"key": "includePending",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/transactions?callbackUrl=https://finicity-test/webhook&toDate=1607450357&includePending=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"transactions"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										},
										{
											"key": "toDate",
											"value": "1607450357"
										},
										{
											"key": "includePending",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/transactions?callbackUrl=https://finicity-test/webhook&toDate=1607450357&includePending=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"transactions"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										},
										{
											"key": "toDate",
											"value": "1607450357"
										},
										{
											"key": "includePending",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/transactions?callbackUrl=https://finicity-test/webhook&toDate=1607450357&includePending=true",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"transactions"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										},
										{
											"key": "toDate",
											"value": "1607450357"
										},
										{
											"key": "includePending",
											"value": "true"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				}
			],
			"description": "Fetch customer and account transactions and generate reports asynchronously"
		},
		{
			"name": "TxPush",
			"item": [
				{
					"name": "Subscribe to TxPush Notifications",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(201)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"callbackUrl\": \"https://eo309tmtekubcq.m.pipedream.net/\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/customers/{{customerId}}/accounts/{{accountId}}/txpush",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"customers",
								"{{customerId}}",
								"accounts",
								"{{accountId}}",
								"txpush"
							]
						},
						"description": "Register a client app's TxPush Listener to receive TxPush notifications related to the given account.\n\nEach call to this service will return two records, one with class account and one with class transaction. Account events are sent when values change in the account's fields (such as `balance` or `interestRate`). Transaction events are sent whenever a new transaction is posted for the account. For institutions that do not provide TxPush services, notifications are sent as soon as Finicity finds a new transaction or new account data through regular aggregation processes.\n\nThe listener's URL must be secure (HTTPS) for any real-world account. In addition, the client's TxPush Listener will need to be verified. HTTP and HTTPS connections are only allowed on the standard ports 80 (HTTP) and 443 (HTTPS). The use of other ports will result with the call failing.\n\nFor additional details on this process, see [TxPush Listener Service](https://docs.finicity.com/txpush-listener-service/).\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The subscription was successfully created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/txpush",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"txpush"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"subscriptions\": [\n  {\n   \"id\": 17554874,\n   \"accountId\": 5011648377,\n   \"type\": \"account\",\n   \"callbackUrl\": \"https://www.mydomain.com/txpush/listener\",\n   \"signingKey\": \"zg4U0v1IvTzFEHIXzJMxPHnfUwWZAMVpXrUuNuL9IvZI0QzkDdwp39IAKuNOFxOVqCOgHLMS1Zpe4ZL40NX83aJkqI6v0Ez5B7BLBtvr7Ag11kPH3uG1taTeOV0CTyI4LOg7ohSHn0DqaRu2aBq26KI90nYe0CecTCzzhu4yMXL43JV8YfydAexNdkzfg8tY44MlhBPUh2neHW2EFTT2ja4s4Ul10JgID03un8WBSrIm2adHw3QYJB4jk4k1e\"\n  },\n  {\n   \"id\": 17554874,\n   \"accountId\": 5011648377,\n   \"type\": \"account\",\n   \"callbackUrl\": \"https://www.mydomain.com/txpush/listener\",\n   \"signingKey\": \"zg4U0v1IvTzFEHIXzJMxPHnfUwWZAMVpXrUuNuL9IvZI0QzkDdwp39IAKuNOFxOVqCOgHLMS1Zpe4ZL40NX83aJkqI6v0Ez5B7BLBtvr7Ag11kPH3uG1taTeOV0CTyI4LOg7ohSHn0DqaRu2aBq26KI90nYe0CecTCzzhu4yMXL43JV8YfydAexNdkzfg8tY44MlhBPUh2neHW2EFTT2ja4s4Ul10JgID03un8WBSrIm2adHw3QYJB4jk4k1e\"\n  }\n ]\n}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/txpush",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"txpush"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/txpush",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"txpush"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/txpush",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"txpush"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Disable TxPush Notifications",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(204)\r",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const baseUrl = pm.collectionVariables.get(\"baseUrl\")\r",
									"const appKey = pm.environment.get(\"appKey\")\r",
									"const customerId = pm.environment.get(\"customerId\")\r",
									"const appToken = pm.globals.get(\"appToken\")\r",
									"const accountId = pm.variables.get(\"accountId\")\r",
									"\r",
									"// Create a subscription we can delete later\r",
									"console.log(\"Subscribing to TxPush Notifications...\")\r",
									"const options = {\r",
									"    url:  baseUrl + \"/aggregation/v1/customers/\"+ customerId + \"/accounts/\"+ accountId + \"/txpush\",\r",
									"    method: 'POST',\r",
									"    header: {\r",
									"        \"Accept\": \"application/json\",\r",
									"        \"Content-Type\": \"application/json\",\r",
									"        \"Finicity-App-Key\": appKey,\r",
									"        \"Finicity-App-Token\": appToken\r",
									"    },\r",
									"    body: JSON.stringify({\r",
									"        \"callbackUrl\": \"https://eo309tmtekubcq.m.pipedream.net/\"\r",
									"    })\r",
									"}\r",
									"pm.sendRequest(options, function (err, response) {\r",
									"    pm.expect(err).to.be.null\r",
									"    pm.expect(response.code).to.equals(201)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/customers/{{customerId}}/accounts/{{accountId}}/txpush",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"customers",
								"{{customerId}}",
								"accounts",
								"{{accountId}}",
								"txpush"
							]
						},
						"description": "Delete all TxPush subscriptions with their notifications for the given account. No more notifications will be sent for account or transaction events.\n\nFor additional details on this process, see [TxPush Listener Service](https://docs.finicity.com/txpush-listener-service/).\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "Subscriptions were successfully deleted for the given account",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/txpush",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"txpush"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/txpush",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"txpush"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/txpush",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"txpush"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/txpush",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"txpush"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Create TxPush Test Transaction",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.equals(201)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": -4.25,\n    \"description\": \"a testing transaction description\",\n    \"transactionDate\": 1607450357,\n    \"status\": \"pending\",\n    \"postedDate\": 1607450357\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/customers/{{customerId}}/accounts/{{accountId}}/transactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"customers",
								"{{customerId}}",
								"accounts",
								"{{accountId}}",
								"transactions"
							]
						},
						"description": "Inject a transaction into the transaction list for a testing account. This allows an app to trigger TxPush notifications for the account in order to test the app's TxPush Listener service. This causes the platform to send one transaction event and one account event (showing that the account balance has changed). This service is only supported for testing accounts.\n\nFor additional details on this process, see [TxPush Listener Service](https://docs.finicity.com/txpush-listener-service/).\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The test notification was successfully sent",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/transactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"transactions"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": 21284820852,\n \"createdDate\": 1607450357\n}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/transactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"transactions"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/transactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"transactions"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/accounts/:accountId/transactions",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"accounts",
										":accountId",
										"transactions"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "accountId",
											"value": "5011648377",
											"description": "(Required) The account ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Delete TxPush Subscription",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const baseUrl = pm.collectionVariables.get(\"baseUrl\")\r",
									"const appKey = pm.environment.get(\"appKey\")\r",
									"const customerId = pm.environment.get(\"customerId\")\r",
									"const appToken = pm.globals.get(\"appToken\")\r",
									"const accountId = pm.variables.get(\"accountId\")\r",
									"\r",
									"// Create a subscription we can delete later\r",
									"console.log(\"Subscribing to TxPush Notifications...\")\r",
									"const options = {\r",
									"    url:  baseUrl + \"/aggregation/v1/customers/\"+ customerId + \"/accounts/\"+ accountId + \"/txpush\",\r",
									"    method: 'POST',\r",
									"    header: {\r",
									"        \"Accept\": \"application/json\",\r",
									"        \"Content-Type\": \"application/json\",\r",
									"        \"Finicity-App-Key\": appKey,\r",
									"        \"Finicity-App-Token\": appToken\r",
									"    },\r",
									"    body: JSON.stringify({\r",
									"        \"callbackUrl\": \"https://eo309tmtekubcq.m.pipedream.net/\"\r",
									"    })\r",
									"}\r",
									"pm.sendRequest(options, function (err, response) {\r",
									"    pm.expect(err).to.be.null\r",
									"    pm.expect(response.code).to.equals(201)\r",
									"    pm.variables.set(\"subscriptionId\", response.json().subscriptions[0].id)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/aggregation/v1/customers/{{customerId}}/subscriptions/{{subscriptionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"aggregation",
								"v1",
								"customers",
								"{{customerId}}",
								"subscriptions",
								"{{subscriptionId}}"
							]
						},
						"description": "Delete a specific subscription to TxPush notifications for the given account. This could be individual deleting the account or transactions events. No more events will be sent for that specific subscription.\n\nFor additional details on this process, see [TxPush Listener Service](https://docs.finicity.com/txpush-listener-service/).\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The subscription was successfully deleted",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/subscriptions/:subscriptionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"subscriptions",
										":subscriptionId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "subscriptionId",
											"value": "17554874",
											"description": "(Required) The subscription ID"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/subscriptions/:subscriptionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"subscriptions",
										":subscriptionId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "subscriptionId",
											"value": "17554874",
											"description": "(Required) The subscription ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/subscriptions/:subscriptionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"subscriptions",
										":subscriptionId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "subscriptionId",
											"value": "17554874",
											"description": "(Required) The subscription ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/aggregation/v1/customers/:customerId/subscriptions/:subscriptionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"aggregation",
										"v1",
										"customers",
										":customerId",
										"subscriptions",
										":subscriptionId"
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										},
										{
											"key": "subscriptionId",
											"value": "17554874",
											"description": "(Required) The subscription ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				}
			],
			"description": "Manage TxPush subscriptions",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const baseUrl = pm.collectionVariables.get(\"baseUrl\")",
							"const appKey = pm.environment.get(\"appKey\")",
							"const customerId = pm.environment.get(\"customerId\")",
							"const appToken = pm.globals.get(\"appToken\")",
							"",
							"const accountId = pm.variables.get(\"accountId\")",
							"if (accountId) {",
							"    return",
							"}",
							"",
							"console.log(\"Fetching account ID ...\")",
							"const options = {",
							"    url:  baseUrl + \"/aggregation/v1/customers/\"+ customerId + \"/accounts\",",
							"    method: 'GET',",
							"    header: {",
							"        \"Accept\": \"application/json\",",
							"        \"Finicity-App-Key\": appKey,",
							"        \"Finicity-App-Token\": appToken",
							"    }",
							"}",
							"pm.sendRequest(options, function (err, response) {",
							"    pm.expect(err).to.be.null",
							"    pm.expect(response.code).to.equals(200)",
							"    pm.variables.set(\"accountId\", response.json().accounts[0].id)",
							"})"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Verify Assets",
			"item": [
				{
					"name": "Generate VOA Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([202, 429, 401])\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reportCustomFields\": [\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        },\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        }\n    ],\n    \"showNsf\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/decisioning/v2/customers/{{customerId}}/voa",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decisioning",
								"v2",
								"customers",
								"{{customerId}}",
								"voa"
							],
							"query": [
								{
									"key": "callbackUrl",
									"value": "https://finicity-test/webhook",
									"description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.",
									"disabled": true
								}
							]
						},
						"description": "Generate a Verification of Assets (VOA) report for all checking, savings, money market, and investment accounts for the given customer. This service retrieves up to twelve months of transaction history for each account and uses this information to generate the VOA report.\n\nThis is a premium service. The billing rate is the variable rate for Verification of Assets under the current subscription plan. The billable event is the successful generation of a VOA report.\n\nBefore calling this API, a consumer must be created for the given customer ID (see Consumers APIs).\n\nIf no account of type checking, savings, money market, or investment is found, the service will return HTTP 400 Bad Request.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voa?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voa"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voa?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voa"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voa?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voa"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voa?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voa"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Generate VOA With Income Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([202, 429, 401])\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reportCustomFields\": [\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        },\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        }\n    ],\n    \"showNsf\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/decisioning/v2/customers/{{customerId}}/voaHistory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decisioning",
								"v2",
								"customers",
								"{{customerId}}",
								"voaHistory"
							],
							"query": [
								{
									"key": "callbackUrl",
									"value": "https://finicity-test/webhook",
									"description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.",
									"disabled": true
								}
							]
						},
						"description": "Generate a Verification of Assets with Income (VOAI) report for all checking, savings, money market, and investment accounts for the given customer. This service retrieves up to 24 months of transaction history for each account and uses this information to generate the VOAI report. The report includes 1 - 6 months of all debit and credit transactions for asset verification. By default, the history is set to 61 days, however, you can change the transaction history in this section by setting the `fromDate` parameter. The report also includes up to 24 months of income credit transactions (ordered by account and confidence level) regardless of `fromDate` for income verification.\n\nThis is a premium service. The billable event is the successful generation of a VOAI report.\n\nBefore calling this API, a consumer must be created for the given customer ID (see Consumers APIs).\n\nIf no account of type checking, savings, money market, or investment is found, the service will return HTTP 400 Bad Request.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voaHistory?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voaHistory"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voaHistory?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voaHistory"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voaHistory?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voaHistory"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voaHistory?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voaHistory"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Generate Prequalification Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([202, 429, 401])\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reportCustomFields\": [\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        },\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        }\n    ],\n    \"showNsf\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/decisioning/v2/customers/{{customerId}}/preQualVoa",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decisioning",
								"v2",
								"customers",
								"{{customerId}}",
								"preQualVoa"
							],
							"query": [
								{
									"key": "callbackUrl",
									"value": "https://finicity-test/webhook",
									"description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.",
									"disabled": true
								}
							]
						},
						"description": "Generate a Prequalification Report (`preQualVoa`) for all checking, savings, money market, and investment accounts for the given customer. This service retrieves account and owner information as well as the number of NSFs for any account that is a checking account for the customer. \n\nThis is a premium service. The billing rate is billed per report for the Prequalification report. \n\nBefore calling this API, a consumer must be created for the given customer ID (see Consumers APIs).\n\nIf no account of type checking, savings, money market, or investment is found, the service will return HTTP 400 Bad Request.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/preQualVoa?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"preQualVoa"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/preQualVoa?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"preQualVoa"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/preQualVoa?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"preQualVoa"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/preQualVoa?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"preQualVoa"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Generate Prequalification (Non-CRA) Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([202, 429, 401])\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reportCustomFields\": [\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        },\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        }\n    ],\n    \"showNsf\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/decisioning/v2/customers/{{customerId}}/assetSummary",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decisioning",
								"v2",
								"customers",
								"{{customerId}}",
								"assetSummary"
							],
							"query": [
								{
									"key": "callbackUrl",
									"value": "https://finicity-test/webhook",
									"description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.",
									"disabled": true
								}
							]
						},
						"description": "Retrieve all checking, savings, money market, and investment accounts for a customer. The account, owner information, and the number of insufficient funds (NSFs) for checking accounts are also provided.\n\nThis is a premium service, billable per every successful API call.\n\nIf no account type of checking, savings, money market, or investment is found, the service will return HTTP 400 Bad Request.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/assetSummary?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"assetSummary"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/assetSummary?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"assetSummary"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/assetSummary?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"assetSummary"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/assetSummary?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"assetSummary"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				}
			],
			"description": "Generate asset reports asynchronously"
		},
		{
			"name": "Verify Income and Employment",
			"item": [
				{
					"name": "Generate VOI Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([202, 429, 401])\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reportCustomFields\": [\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        },\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        }\n    ],\n    \"showNsf\": false\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/decisioning/v2/customers/{{customerId}}/voi?callbackUrl=https://finicity-test/webhook",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decisioning",
								"v2",
								"customers",
								"{{customerId}}",
								"voi"
							],
							"query": [
								{
									"key": "callbackUrl",
									"value": "https://finicity-test/webhook",
									"description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code."
								}
							]
						},
						"description": "Generate a Verification of Income (VOI) report for all checking, savings, and money market accounts for the given customer. This service retrieves up to two years of transaction history for each account and uses this information to generate the VOI report.\n\nThis is a premium service. The billing rate is the variable rate for Verification of Income under the current subscription plan. The billable event is the successful generation of a VOI report.\n\nIf no account of type checking, savings, or money market is found, the service will return HTTP 400 Bad Request.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voi?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voi"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voi?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voi"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voi?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voi"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voi?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voi"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Generate VOE - Payroll Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([202, 429, 401])\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"payrollData\": {\n        \"ssn\": \"999601111\",\n        \"dob\": 15983999\n    },\n    \"reportCustomFields\": [\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        },\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/decisioning/v2/customers/{{customerId}}/voePayroll",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decisioning",
								"v2",
								"customers",
								"{{customerId}}",
								"voePayroll"
							],
							"query": [
								{
									"key": "callbackUrl",
									"value": "https://finicity-test/webhook",
									"description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.",
									"disabled": true
								}
							]
						},
						"description": "Premium Service: A billable event when the API response is successful. \n\nMVS Implementation Options: Direct API Integration.\n\nUsed as a complementary report to the VOIE-Payroll report. This report is used to fulfill the pre-close VOE requirements. It retrieves the customer's employment details and employment status through the payroll source without any income information. \n\nTo generate this report, pass the values from the customer SSN, DOB, and the report ID from the first VOIE-Payroll report generated after the Connect session.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voePayroll?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voePayroll"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voePayroll?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voePayroll"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voePayroll?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voePayroll"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voePayroll?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voePayroll"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Generate VOE - Transactions Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([202, 429, 401])\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"reportCustomFields\": [\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        },\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        }\n    ],\n    \"incomeStreamConfidenceMinimum\": 50\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/decisioning/v2/customers/{{customerId}}/voeTransactions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decisioning",
								"v2",
								"customers",
								"{{customerId}}",
								"voeTransactions"
							],
							"query": [
								{
									"key": "callbackUrl",
									"value": "https://finicity-test/webhook",
									"description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.",
									"disabled": true
								}
							]
						},
						"description": "Premium Service: A billable event when the API response is successful.\n\nMVS-Direct integration developers only.\n\nUsed as a complimentary report to the VOA with Income and VOIE - Paystub (with TXVerify) reports and used to fulfill the pre-close VOE requirements. \n\nRetrieve the latest credit transaction information from the borrower's connected bank accounts and groups them into income streams so that you can view their payment history to ensure a direct deport was made within the expected cadence. The report displays transaction descriptions without any dollar amounts so that income re-verification isn't necessary.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voeTransactions?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voeTransactions"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voeTransactions?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voeTransactions"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voeTransactions?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voeTransactions"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voeTransactions?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voeTransactions"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Generate Pay Statement Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([202, 429, 401])\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"paystatementReport\": {\n        \"assetIds\": [\n            \"{{assetId}}\"\n        ],\n        \"extractEarnings\": true,\n        \"extractDeductions\": true,\n        \"extractDirectDeposit\": true\n    },\n    \"reportCustomFields\": [\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        },\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/decisioning/v2/customers/{{customerId}}/payStatement",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decisioning",
								"v2",
								"customers",
								"{{customerId}}",
								"payStatement"
							],
							"query": [
								{
									"key": "callbackUrl",
									"value": "https://finicity-test/webhook",
									"description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.",
									"disabled": true
								}
							]
						},
						"description": "Generate Pay Statement Extraction Report for the given customer. This service accepts asset IDs of the stored pay statements to generate a Pay Statement Extraction Report. \n\nThis is a premium service. The billing rate is the variable rate for Pay Statement Extraction Report under the current subscription plan. The billable event is the successful generation of a Pay Statement Extraction Report.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/payStatement?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"payStatement"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/payStatement?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"payStatement"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/payStatement?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"payStatement"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/payStatement?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"payStatement"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Generate VOIE - Paystub (with TXVerify) Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([202, 429, 401])\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"voieWithInterviewData\": {\n        \"txVerifyInterview\": [\n            {\n                \"assetId\": \"{{assetId}}\"\n            }\n        ],\n        \"extractEarnings\": true,\n        \"extractDeductions\": true,\n        \"extractDirectDeposit\": true\n    },\n    \"reportCustomFields\": [\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        },\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/decisioning/v2/customers/{{customerId}}/voieTxVerify/withInterview",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decisioning",
								"v2",
								"customers",
								"{{customerId}}",
								"voieTxVerify",
								"withInterview"
							],
							"query": [
								{
									"key": "callbackUrl",
									"value": "https://finicity-test/webhook",
									"description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.",
									"disabled": true
								}
							]
						},
						"description": "Generate a VOIE - Paystub (with TXVerify) report for all checking and savings under the given customer. This service retrieves up to two years of transaction history for the given accounts. It then uses this information as well as the provided paystub(s), which are passed into the request body as asset IDs (generated using the Store Customer Pay Statement API) to generate the VOIE - Paystub (with TXVerify) report.\n\nNote: if you are using this API to refresh the bank transactions, use the same asset ID from the first report. A new paystub is not required unless the paystub is too old for underwriting requirements. Using the same asset ID that was on the original report and the previously extracted details will be used to speed up report generation response time.\n\nThis is a premium service. The billing rate is the variable rate for VOIE TXVerify under the current subscription plan. The billable event is the successful generation of a VOIE TXVerify Report.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voieTxVerify/withInterview?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voieTxVerify",
										"withInterview"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voieTxVerify/withInterview?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voieTxVerify",
										"withInterview"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voieTxVerify/withInterview?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voieTxVerify",
										"withInterview"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voieTxVerify/withInterview?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voieTxVerify",
										"withInterview"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Generate VOIE - Paystub Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([202, 429, 401])\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"voieWithStatementData\": {\n        \"assetIds\": [\n            \"{{assetId}}\"\n        ],\n        \"extractEarnings\": true,\n        \"extractDeductions\": true,\n        \"extractDirectDeposit\": true\n    },\n    \"reportCustomFields\": [\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        },\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/decisioning/v2/customers/{{customerId}}/voieTxVerify/withStatement",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decisioning",
								"v2",
								"customers",
								"{{customerId}}",
								"voieTxVerify",
								"withStatement"
							],
							"query": [
								{
									"key": "callbackUrl",
									"value": "https://finicity-test/webhook",
									"description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.",
									"disabled": true
								}
							]
						},
						"description": "Generate a VOIE - Paystub report. This service uses the provided paystub(s), which are passed into the request body as asset IDs (generated using the Store Customer Pay Statement API) to generate the VOIE - Paystub report with digitized paystub details.\n\nThis is a premium service. The billing rate is the variable rate for VOIE - Paystub under the current subscription plan. The billable event is the successful generation of a VOIE - Paystub Report.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voieTxVerify/withStatement?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voieTxVerify",
										"withStatement"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voieTxVerify/withStatement?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voieTxVerify",
										"withStatement"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voieTxVerify/withStatement?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voieTxVerify",
										"withStatement"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voieTxVerify/withStatement?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voieTxVerify",
										"withStatement"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				},
				{
					"name": "Refresh VOIE - Payroll Report",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Check status code\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([202, 429, 401])\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "Finicity-App-Token",
								"value": "{{appToken}}",
								"type": "text"
							},
							{
								"key": "Finicity-App-Key",
								"value": "{{appKey}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"payrollData\": {\n        \"ssn\": \"999601111\",\n        \"dob\": 15983999\n    },\n    \"reportCustomFields\": [\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        },\n        {\n            \"label\": \"loanID\",\n            \"value\": \"123456\",\n            \"shown\": true\n        }\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/decisioning/v2/customers/{{customerId}}/voiePayroll",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"decisioning",
								"v2",
								"customers",
								"{{customerId}}",
								"voiePayroll"
							],
							"query": [
								{
									"key": "callbackUrl",
									"value": "https://finicity-test/webhook",
									"description": "A Report Listener URL to receive notifications. The webhook must respond to the Finicity API with a 2xx HTTP status code.",
									"disabled": true
								}
							]
						},
						"description": "The VOIE – Payroll report generates when the customer completes Connect. Lenders, who commonly use this report for pre-close verification employment check, can refresh this report by passing the consumer's SSN, DOB, and the report ID from the first VOIE – Payroll report they received.\n\nWe'll refresh this report and update any new pay histories since the first report generated, including borrower's employment status as active or not.\n\nNote: lenders can only refresh this report one time in a 60-day period starting from the date of the first report. Any further report refreshes will incur additional charges.\n\n_Supported regions_: ![🇺🇸](https://flagcdn.com/20x15/us.png)"
					},
					"response": [
						{
							"name": "The report is being generated. When finished, a notification will be sent to the specified callback URL (Report Listener Service) and the report can be fetched using Get Report APIs. If you don't use a callback URL, Get Report returns a minimal report with the following status: 'inProgress'. Repeat the call every 20 seconds until Get Report returns a different status.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voiePayroll?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voiePayroll"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Accepted",
							"code": 202,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{}"
						},
						{
							"name": "The request was rejected",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voiePayroll?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voiePayroll"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10010\",\n \"status\": \"400\",\n \"message\": \"\\\"partnerId\\\" is required\",\n \"user_message\": \"One or more of the fields could not be validated. Please ensure you have entered the correct data.\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The request lacks valid authentication credentials. Check \"Finicity-App-Key\" or \"Finicity-App-Token\".",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voiePayroll?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voiePayroll"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": \"10022\",\n \"status\": \"401\",\n \"message\": \"Invalid authorization credentials\",\n \"user_message\": \"The session has expired or is invalid\",\n \"tags\": \"\"\n}"
						},
						{
							"name": "The resource doesn't exist",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": "Added as a part of security scheme: apikey",
										"key": "Finicity-App-Key",
										"value": "{{appKey}}"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/decisioning/v2/customers/:customerId/voiePayroll?callbackUrl=https://finicity-test/webhook",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"decisioning",
										"v2",
										"customers",
										":customerId",
										"voiePayroll"
									],
									"query": [
										{
											"key": "callbackUrl",
											"value": "https://finicity-test/webhook"
										}
									],
									"variable": [
										{
											"key": "customerId",
											"value": "1005061234",
											"description": "(Required) A customer ID"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 10100,\n \"message\": \"Cannot find consumer with id 1234.\"\n}"
						}
					]
				}
			],
			"description": "Generate income and employment reports asynchronously",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"const baseUrl = pm.collectionVariables.get(\"baseUrl\")",
							"const appKey = pm.environment.get(\"appKey\")",
							"const customerId = pm.environment.get(\"customerId\")",
							"const appToken = pm.globals.get(\"appToken\")",
							"",
							"const assetId = pm.variables.get(\"assetId\")",
							"if (assetId) {",
							"    return",
							"}",
							"",
							"console.log(\"Creating asset ID ...\")",
							"const options = {",
							"    url:  baseUrl + \"/aggregation/v1/customers/\"+ customerId + \"/payStatements\",",
							"    method: 'POST',",
							"    header: {",
							"        \"Accept\": \"application/json\",",
							"        \"Content-Type\": \"application/json\",",
							"        \"Finicity-App-Key\": appKey,",
							"        \"Finicity-App-Token\": appToken",
							"    },",
							"    body: JSON.stringify({",
							"        \"label\": \"lastPayPeriod\",",
							"        \"statement\": \"VGhpcyBtdXN0IGJlIGFuIGltYWdl\"",
							"    })",
							"}",
							"pm.sendRequest(options, function (err, response) {",
							"    pm.expect(err).to.be.null",
							"    pm.expect(response.code).to.equals(200)",
							"    pm.variables.set(\"assetId\", response.json().assetId)",
							"})"
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"console.log(pm.info.requestName + \" ...\")",
					"",
					"// Generate a new access token every 90 minutes",
					"const baseUrl = pm.collectionVariables.get(\"baseUrl\")",
					"const partnerId = pm.environment.get(\"partnerId\")",
					"const partnerSecret = pm.environment.get(\"partnerSecret\")",
					"const appKey = pm.environment.get(\"appKey\")",
					"const appToken = pm.globals.get(\"appToken\")",
					"",
					"const now = new Date()",
					"const expiryDate = appToken ? new Date(pm.globals.get(\"appTokenExpiry\")) : now",
					"if (appToken && expiryDate > now) {",
					"    // The token is still valid",
					"    return",
					"}",
					"",
					"// Create a new token",
					"console.log(\"Creating access token ...\")",
					"const options = {",
					"    url:  baseUrl + \"/aggregation/v2/partners/authentication\", ",
					"    method: 'POST',",
					"    header: {",
					"        \"Accept\": \"application/json\",",
					"        \"Content-type\": \"application/json\",",
					"        \"Finicity-App-Key\": appKey",
					"    },",
					"    body: JSON.stringify({",
					"        \"partnerId\": partnerId,",
					"        \"partnerSecret\": partnerSecret",
					"    })",
					"}",
					"pm.sendRequest(options, function (err, response) {",
					"    if (response.code == 403) {",
					"        throw Error(\"HTTP 403. Make sure you are located in the US, UK or Canada.\")",
					"    }",
					"    pm.expect(err).to.be.null",
					"    pm.expect(response.code).to.equals(200)",
					"    const tokenValue = response.json().token",
					"    const expiryDate = new Date()",
					"    expiryDate.setMinutes(expiryDate.getMinutes() + 90)",
					"    pm.globals.set(\"appToken\", tokenValue)",
					"    pm.globals.set(\"appTokenExpiry\", expiryDate)",
					"",
					"    // Create a consumer for report generation APIs",
					"    createConsumer()",
					"})",
					"",
					"",
					"function createConsumer() {",
					"    const baseUrl = pm.collectionVariables.get(\"baseUrl\")",
					"    const customerId = pm.environment.get(\"customerId\")",
					"    const appKey = pm.environment.get(\"appKey\")",
					"    const appToken = pm.globals.get(\"appToken\")",
					"",
					"    const consumerExists = pm.globals.get(\"consumerExists\")",
					"    if (consumerExists) {",
					"        // A consumer was already created",
					"        return",
					"    }",
					"",
					"    console.log(\"Creating consumer ... \")",
					"    const options = {",
					"        url:  baseUrl + \"/decisioning/v1/customers/\" + customerId + \"/consumer\", ",
					"        method: 'POST',",
					"        header: {",
					"            \"Accept\": \"application/json\",",
					"            \"Content-type\": \"application/json\",",
					"            \"Finicity-App-Key\": appKey,",
					"            \"Finicity-App-Token\": appToken",
					"        },",
					"        body: JSON.stringify({",
					"            \"firstName\": \"Homer\",",
					"            \"lastName\": \"Loanseeke\",",
					"            \"address\": \"434 W Ascension Way\",",
					"            \"city\": \"Murray\",",
					"            \"state\": \"UT\",",
					"            \"zip\": \"84123\",",
					"            \"phone\": \"1-800-986-3343\",",
					"            \"ssn\": \"999601111\",",
					"            \"birthday\": {",
					"                \"year\": 1970,",
					"                \"month\": 7,",
					"                \"dayOfMonth\": 4",
					"            },",
					"            \"email\": \"finicity@test.com\",",
					"            \"suffix\": \"Mr\"",
					"        })",
					"    }",
					"    pm.sendRequest(options, function (err, response) {",
					"        pm.expect(err).to.be.null",
					"        pm.expect(response.code).to.be.oneOf([200, 201, 409])",
					"        pm.globals.set(\"consumerExists\", true)",
					"    })",
					"}"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.finicity.com"
		},
		{
			"value": "",
			"disabled": true
		}
	]
}